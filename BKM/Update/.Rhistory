data_50 <- data_fun(50)
time_HMMnorm_init_10 = time_HMMnorm1_init
time_HMMnorm_sample_10 = time_HMMnorm1_sample
outputHMMnorm_10 <- outputHMMnorm1
mod_10<-mod
cat("Initialise the model:\n")
tstart=proc.time()
mod_20 <- jags.model('BKM_Bugs_HMM_approx_unifprior_sum_norm.R',data_20,inits,n.chains=cha,n.adapt=ada)
time_HMMnorm_init_20 <- proc.time()-tstart
cat("Run the MCMC simulations:\n")
tstart=proc.time()
outputHMMnorm_20 <- coda.samples(mod,params,n.iter=iter,thin=th)
time_HMMnorm_sample_20 <- proc.time()-tstart
cat("Run the MCMC simulations:\n")
tstart=proc.time()
outputHMMnorm_20 <- coda.samples(mod_20,params,n.iter=iter,thin=th)
time_HMMnorm_sample_20 <- proc.time()-tstart
cat("Initialise the model:\n")
tstart=proc.time()
mod_50 <- jags.model('BKM_Bugs_HMM_approx_unifprior_sum_norm.R',data_50,inits,n.chains=cha,n.adapt=ada)
time_HMMnorm_init_50 <- proc.time()-tstart
cat("Run the MCMC simulations:\n")
tstart=proc.time()
outputHMMnorm_50 <- coda.samples(mod_50,params,n.iter=iter,thin=th)
time_HMMnorm_sample_50 <- proc.time()-tstart
##########################################
cat("Initialise the model:\n")
tstart=proc.time()
mod_5 <- jags.model('BKM_Bugs_HMM_approx_unifprior_sum_norm.R',data_5,inits,n.chains=cha,n.adapt=ada)
time_HMMnorm_init_5 <- proc.time()-tstart
cat("Run the MCMC simulations:\n")
tstart=proc.time()
outputHMMnorm_5 <- coda.samples(mod_5,params,n.iter=iter,thin=th)
time_HMMnorm_sample_5 <- proc.time()-tstart
time_HMMnorm_sample_10
time_HMMnorm_sample_20
time_HMMnorm_sample_50
time_HMMnorm_sample_5
time_HMMnorm_init_10
time_HMMnorm_init_20
time_HMMnorm_init_50
time_HMMnorm_init_5
mat10 = as.matrix(outputHMMnorm_10[1])
mat20 = as.matrix(outputHMMnorm_20[1])
mat50 = as.matrix(outputHMMnorm_50[1])
mat5 = as.matrix(outputHMMnorm_5[1])
mat_names <- colnames(mat10)
mat_names
plot(colMeans(mat10[,1:36]), type='l', xlab ="", ylab="", sub="Na")
plot(colMeans(mat10[,1:36]), type='l', xlab ="", ylab="", sub="Na")
lines(colMeans(mat20[,1:36]), type='l', col="blue")
lines(colMeans(mat50[,1:36]), type='l', col="green")
lines(colMeans(mat5[,1:36]), type='l', col ="red")
plot(apply(mat10[,1:36], 2, sd), type='l', xlab ="", ylab="", sub="Na")
lines(apply(mat20[,1:36], 2, sd), type='l', col="blue")
lines(apply(mat50[,1:36], 2, sd), type='l', col="green")
lines(apply(mat5[,1:36], 2,sd), type='l', col ="red")
seq(1,36,6)
seq(1,36,3)
length9seq(1,36,3))
length(seq(1,36,3))
# Na
par(mfrow=c(3,4))
for (i in seq(1,36,3)){
plot(mat10[,i] ,type="l", xlab = "", ylab="", sub = mat_names[i])
lines(mat20[,i], type='l', col="blue")
lines(mat50[,i], type='l', col="green")
lines(mat5[,i], type='l', col ="red")
}
seq(2,36,5)
# Na
for (i in seq(2,36,5)){
par(mfrow=c(2,2))
plot(mat10[,i] ,type="l", xlab = "", ylab="", sub = mat_names[i])
plot(mat20[,i], type='l', col="blue",  xlab = "", ylab="", sub = mat_names[i])
plot(mat50[,i], type='l', col="green",  xlab = "", ylab="", sub = mat_names[i])
plot(mat5[,i], type='l', col ="red",  xlab = "", ylab="", sub = mat_names[i])
}
mat_names
mat_names[36+9]
seq(36+(1:9))
seq(1:9)+36
(36+seq(1:9))
# Na
for (i in (36+seq(1:9))){
par(mfrow=c(2,2))
plot(mat10[,i] ,type="l", xlab = "", ylab="", sub = mat_names[i])
plot(mat20[,i], type='l', col="blue",  xlab = "", ylab="", sub = mat_names[i])
plot(mat50[,i], type='l', col="green",  xlab = "", ylab="", sub = mat_names[i])
plot(mat5[,i], type='l', col ="red",  xlab = "", ylab="", sub = mat_names[i])
}
i=2
par(mfrow=c(2,2))
acf(mat10[,i] ,type="l", xlab = "", ylab="", main = mat_names[i])
acf(mat10[,i], main = mat_names[i])
paste(N_bin = 10, mat_names[i], seq="")
paste("N_bin = 10, ", mat_names[i], seq="")
paste("N_bin=10, ", mat_names[i], seq="")
save.image("C:/Users/aba228/Desktop/BKM_norm_comp.RData")
i
par(mfrow=c(2,2))
acf(mat10[,i], main = paste("N_bin=10, ", mat_names[i], seq="")
acf(mat20[,i], main = paste("N_bin=20, ", mat_names[i], seq="")
acf(mat50[,i], main = paste("N_bin=50, ", mat_names[i], seq="")
acf(mat5[,i], main = paste("N_bin=5, ", mat_names[i], seq="")
for (i in seq(2,36,5)){
par(mfrow=c(2,2))
acf(mat10[,i], main = paste("N_bin=10, ", mat_names[i], seq=""))
acf(mat20[,i], main = paste("N_bin=20, ", mat_names[i], seq=""))
acf(mat50[,i], main = paste("N_bin=50, ", mat_names[i], seq=""))
acf(mat5[,i], main = paste("N_bin=5, ", mat_names[i], seq=""))
}
for (i in (36+seq(1:9))){
par(mfrow=c(2,2))
acf(mat10[,i], main = paste("N_bin=10, ", mat_names[i], seq=""))
acf(mat20[,i], main = paste("N_bin=20, ", mat_names[i], seq=""))
acf(mat50[,i], main = paste("N_bin=50, ", mat_names[i], seq=""))
acf(mat5[,i], main = paste("N_bin=5, ", mat_names[i], seq=""))
}
ESS10 = lapply(output10,effectiveSize)
ESS20 = lapply(output20,effectiveSize)
ESS50 = lapply(output50,effectiveSize)
ESS5 = lapply(output5,effectiveSize)
ESS10 = lapply(outputHMMnorm_10,effectiveSize)
ESS20 = lapply(outputHMMnorm_20,effectiveSize)
ESS50 = lapply(outputHMMnorm_50,effectiveSize)
ESS5 = lapply(outputHMMnorm_5,effectiveSize)
ESS10
ESS10[[1]]
ESS10[1]
ESS10[1,1]
ESS10[[1,1]]
ESS10[1][[1,1]]
ESS10[1][1]
aaaaa <- matrix(unlist(ESS10), ncol = 1, byrow = TRUE)
View(aaaaa)
View(aaaaa)
View(aaaaa)
? cbind
ESS_all <- matrix(unlist(ESS10), ncol = 1, byrow = TRUE)
ESS_all <- cbind(ESS_all, matrix(unlist(ESS20), ncol = 1, byrow = TRUE))
ESS_all <- cbind(ESS_all, matrix(unlist(ESS50), ncol = 1, byrow = TRUE))
ESS_all <- cbind(ESS_all, matrix(unlist(ESS5), ncol = 1, byrow = TRUE))
View(ESS_all)
View(ESS_all)
rowname(ESS_all) <- c("N_bin=10","N_bin=20","N_bin=50","N_bin=5")
colnames(ESS_all) <- c("N_bin=10","N_bin=20","N_bin=50","N_bin=5")
rownames(ESS_all) <- mat_names
View(ESS_all)
View(ESS_all)
time_HMMnorm_sample_all <- c(time_HMMnorm_sample_10,time_HMMnorm_sample_20,time_HMMnorm_sample_50,time_HMMnorm_sample_5)
time_HMMnorm_sample_all
time_HMMnorm_sample_10[3]
time_HMMnorm_sample_all <- c(time_HMMnorm_sample_10[3],time_HMMnorm_sample_20[3],time_HMMnorm_sample_50[3],time_HMMnorm_sample_5[3])
time_HMMnorm_sample_all
ESS_persec_all <- ESS_all/time_HMMnorm_sample_all
View(ESS_persec_all)
View(ESS_persec_all)
583.2240/1616.14
612.5486/2837.44
649.8208/6029.25
544.3667/1059.62
View(ESS_persec_all)
View(ESS_persec_all)
barplot(ESS_persec_all)
barplot(t(ESS_persec_all))
par(mfrow=c(1,1))
barplot(t(ESS_persec_all))
barplot(t(ESS_persec_all), beside= TRUE)
par(mfrow=c(1,1))
barplot(t(ESS_persec_all), beside= TRUE)
barplot(t(ESS_persec_all[1:36,]), beside= TRUE)
barplot(t(ESS_persec_all[37:45,]), beside= TRUE)
time_HMMnorm_sample_all <- c(time_HMMnorm_sample_5[3],
time_HMMnorm_sample_10[3],
time_HMMnorm_sample_20[3],
time_HMMnorm_sample_50[3])
ESS_all <- matrix(unlist(ESS5), ncol = 1, byrow = TRUE)
ESS_all <- cbind(ESS_all, matrix(unlist(ESS10), ncol = 1, byrow = TRUE))
ESS_all <- cbind(ESS_all, matrix(unlist(ESS20), ncol = 1, byrow = TRUE))
ESS_all <- cbind(ESS_all, matrix(unlist(ESS50), ncol = 1, byrow = TRUE))
colnames(ESS_all) <- c("N_bin=5","N_bin=10","N_bin=20","N_bin=50")
rownames(ESS_all) <- mat_names
ESS_persec_all <- ESS_all/time_HMMnorm_sample_all
par(mfrow=c(1,1))
barplot(t(ESS_persec_all), beside= TRUE)
barplot(t(ESS_persec_all[1:36,]), beside= TRUE)
barplot(t(ESS_persec_all[37:45,]), beside= TRUE)
legend(c("N_bin=5","N_bin=10","N_bin=20","N_bin=50"))
barplot(t(ESS_persec_all[37:45,]), beside= TRUE)
legend(c("N_bin=5","N_bin=10","N_bin=20","N_bin=50"))
legend("top",c("N_bin=5","N_bin=10","N_bin=20","N_bin=50"))
barplot(t(ESS_persec_all[1:36,]), beside= TRUE, legend = colnames(ESS_all))
barplot(t(ESS_persec_all[37:45,]), beside= TRUE, legend = colnames(ESS_all))
scaled_on = FALSE
# Read data
if (scaled_on){
source("BKM_Data_scaled.R")
# Set parameters and inital values
source("BKM_StartingVals_scaled.R")
}else {
source("BKM_Data.R")
# Set parameters and inital values
source("BKM_StartingVals.R")
}
setwd("..")
# Read data
if (scaled_on){
source("BKM_Data_scaled.R")
# Set parameters and inital values
source("BKM_StartingVals_scaled.R")
}else {
source("BKM_Data.R")
# Set parameters and inital values
source("BKM_StartingVals.R")
}
# Compile the model: ####
if (scaled_on){
tstart=proc.time()
mod <- jags.model('BKM_Bugs_scaled.R',data,inits,n.chains=cha,n.adapt=ada)
temp=proc.time()-tstart
time_init <- temp
if (save_on) {
save(mod, time_init, file = "Results/BKM_model_scaled.RData")
}
}else {
tstart=proc.time()
mod <- jags.model('BKM_Bugs.R',data,inits,n.chains=cha,n.adapt=ada)
temp=proc.time()-tstart
time_init <- temp # ada = 100 --> PC: 1.23; ada = 1000 --> PC: 6.29
if (save_on) {
save(mod, time_init, file = "Results/BKM_model.RData")
}
}
time_init_DA
time_init_DA<-_time_int
time_init_DA<-_time_init
time_init_DA <- time_init
scaled_on
tstart=proc.time()
mod <- jags.model('BKM_Bugs.R',data,inits,n.chains=cha,n.adapt=ada)
temp=proc.time()-tstart
time_init <- temp # ada = 100 --> PC: 1.23; ada = 1000 --> PC: 6.29
tstart=proc.time()
output1 <- coda.samples(mod,params,n.iter=iter,thin=th)
temp=proc.time()-tstart
time_sample <- temp
time_sample
matDA = as.matrix(output1[1])
mat_names_DA <- colnames(matDA)
mat_names_DA
time_init
ESS_DA = lapply(output1,effectiveSize)
ESS[1]
ESS_DA[1]
ESS_DA <- matrix(unlist(ESS_DA), ncol = 1, byrow = TRUE)
View(ESS_DA)
View(ESS_DA)
mat_names_DA
ESS_DA(37:81)
ESS_DA[37:81]
ESS_DA
mat_names_DA
36*2+9
ESS_DA <- ESS_DA[37:81,]
time_sample
ESS_persec_DA <- ESS_DA/time_sample[3]
View(ESS_persec_all)
ESS_persec_all_DA <-  cbind(ESS_persec_DA, ESS_persec_all)
colnames(ESS_persec_all_DA) <- c("DA","N_bin=5","N_bin=10","N_bin=20","N_bin=50")
rownames(ESS_persec_all_DA) <- mat_names
View(ESS_persec_all_DA)
ESS_all_DA <-  cbind(ESS_DA, ESS_all)
View(ESS_all_DA)
barplot(t(ESS_persec_all_DA[1:36,]), beside= TRUE, legend = colnames(ESS_persec_all_DA))
barplot(t(ESS_persec_all_DA[37:45,]), beside= TRUE, legend = colnames(ESS_persec_all_DA))
barplot(t(ESS_persec_all_DA[2:36,]), beside= TRUE, legend = colnames(ESS_persec_all_DA))
barplot(t(ESS_persec_all_DA[1:36,]), beside= TRUE, legend = colnames(ESS_persec_all_DA))
barplot(t(ESS_persec_all_DA[37:45,]), beside= TRUE, legend = colnames(ESS_persec_all_DA))
barplot(t(ESS_persec_all_DA[1:36,]), beside= TRUE, legend = colnames(ESS_persec_all_DA))
barplot(t(ESS_all_DA[37:45,]), beside= TRUE, legend = colnames(ESS_persec_all_DA))
barplot(t(ESS_persec_all_DA[1:36,]), beside= TRUE, legend = colnames(ESS_persec_all_DA))
barplot(t(ESS_all_DA[37:45,]), beside= TRUE, legend = colnames(ESS_persec_all_DA))
barplot(t(ESS_all_DA[2:36,]), beside= TRUE, legend = colnames(ESS_persec_all_DA))
barplot(t(ESS_all_DA[3:36,]), beside= TRUE, legend = colnames(ESS_persec_all_DA))
barplot(t(ESS_persec_all_DA[3:36,]), beside= TRUE, legend = colnames(ESS_persec_all_DA))
plot(colMeans(mat_DA[,1:36]), type='l', xlab ="", ylab="", sub="Na")
lines(colMeans(mat10[,1:36]), type='l', col="pink")
lines(colMeans(mat20[,1:36]), type='l', col="blue")
lines(colMeans(mat50[,1:36]), type='l', col="green")
lines(colMeans(mat5[,1:36]), type='l', col ="red")
plot(colMeans(matDA[,1:36]), type='l', xlab ="", ylab="", sub="Na")
lines(colMeans(mat10[,1:36]), type='l', col="pink")
lines(colMeans(mat20[,1:36]), type='l', col="blue")
lines(colMeans(mat50[,1:36]), type='l', col="green")
lines(colMeans(mat5[,1:36]), type='l', col ="red")
plot(colMeans(matDA[,1:36]), type='l', xlab ="", ylab="", sub="Na")
lines(colMeans(mat20[,1:36]), type='l', col="blue")
plot(colMeans(mat10[,1:36]), type='l', col="pink")
plot(colMeans(mat10[,1:36]), type='l', col="cyan")
lines(colMeans(mat20[,1:36]), type='l', col="blue")
lines(colMeans(mat50[,1:36]), type='l', col="green")
lines(colMeans(mat5[,1:36]), type='l', col ="red")
lines(colMeans(matDA[,1:36]), type='l', col ="grey")
lines(colMeans(matDA[,1:36]), type='l', col ="black")
plot(colMeans(matDA[,1:36]), type='l', xlab ="", ylab="", sub="Na")
lines(colMeans(mat10[,1:36]), type='l', col="cyan")
lines(colMeans(mat20[,1:36]), type='l', col="blue")
lines(colMeans(mat50[,1:36]), type='l', col="green")
lines(colMeans(mat5[,1:36]), type='l', col ="red")
lines(colMeans(mat10[,1:36]), type='l', col="cyan")
source('C:/Users/aba228/Dropbox/Research Visit/Ruth King/Codes/BKM/BKM_Run_HMM_linux_unifprior.R')
source("BKM_Data_HMM_unifprior.R")
# Set parameters and inital values
source("BKM_StartingVals_HMM_unifprior.R")
tstart=proc.time()
mod <- jags.model('BKM_Bugs_HMM_unifprior.R',data,inits,n.chains=cha,n.adapt=ada)
temp=proc.time()-tstart
time_HMM_init <- temp
time_HMM_init
# Read data ###
source("BKM_Data_HMM_approx_unifprior.R")
# Set parameters and inital values
source("BKM_StartingVals_HMM_approx_unifprior.R")
cat(sprintf("scale = %i",sc),"\n")
cat(sprintf("bin size = %i",bin_size),"\n")
tstart=proc.time()
mod <- jags.model('BKM_Bugs_HMM_approx_unifprior.R',data,inits,n.chains=cha,n.adapt=ada)
temp=proc.time()-tstart
time_HMM_init <- temp
ada
ada=10000
iter=100000
th=1
cha=1
tstart=proc.time()
mod <- jags.model('BKM_Bugs_HMM_approx_unifprior.R',data,inits,n.chains=cha,n.adapt=ada)
temp=proc.time()-tstart
time_HMM_init <- temp
tstart=proc.time()
output1 <- coda.samples(mod,params,n.iter=iter,thin=th)
temp=proc.time()-tstart
time_HMM_sample <- temp
time_HMM_sample
time_HMM_init
mat_HMM = as.matrix(output1[1])
plot(colMeans(mat_HMM[,1:36]), type='l', xlab ="", ylab="", sub="Na")
matDA[1]
matDA[1,]
matDA[,1]
matDA[,81]
matDA[,80]
matDA <- matDA[,37:81]
mat_names_DA <- colnames(matDA)
mat_names_DA
lines(colMeans(matDA[,1:36]), type='l', col ="red")
lines(colMeans(mat50[,1:36]), type='l', col="green")
lines(colMeans(mat20[,1:36]), type='l', col="blue")
lines(colMeans(mat5[,1:36]), type='l', col ="pink")
ESS_HMM = lapply(output1,effectiveSize)
ESS_HMM <- matrix(unlist(ESS_HMM), ncol = 1, byrow = TRUE)
ESS_persec_HMM <- ESS_HMM/time_HMM_sample[3]
View(ESS_HMM)
View(ESS_all_DA)
View(ESS_persec_HMM)
View(ESS_persec_all_DA)
c("HMM",colnames(ESS_persec_all_DA))
barplot(t(cbind(ESS_persec_HMM[2:36,],ESS_persec_all_DA[2:36,])), beside= TRUE, legend = c("HMM",colnames(ESS_persec_all_DA)))
barplot(t(cbind(ESS_persec_HMM[37:45,],ESS_persec_all_DA[37:45,])), beside= TRUE, legend = c("HMM",colnames(ESS_persec_all_DA)))
barplot(t(cbind(ESS_HMM[2:36,],ESS_all_DA[2:36,])), beside= TRUE, legend = c("HMM",colnames(ESS_persec_all_DA)))
barplot(t(cbind(ESS_HMM[37:45,],ESS_all_DA[37:45,])), beside= TRUE, legend = c("HMM",colnames(ESS_persec_all_DA)))
View(ESS_HMM)
save.image("C:/Users/aba228/Desktop/ESS.RData")
? regmatches
save(ls(pattern='^time'),ls(pattern='^ESS'),file = "BKM_ESS.RData"))
save(ls(pattern='^time'),ls(pattern='^ESS'),file = "BKM_ESS.RData")
ls(pattern='^time')
ls(pattern='^ESS')
save(ls(pattern='^ESS'),file = "BKM_ESS.RData")
save(list = ls(ls(pattern='^time'),ls(pattern='^ESS')),file = "BKM_ESS.RData")
TTTTTTT <- ls(pattern='^time')
TTTTTTT
TTT
TTT <- ls(pattern='^time')
EEE <- ls(pattern='^ESS')
save(TTT, EEE ,file = "BKM_ESS.RData")
TTT
bin = rep(0,N_bin+1)
for (i in 0:(N_bin)){
bin[i+1] <- 0.5*(bin_size*(2*i+1)-1)
}
bin
27*2
data_fun_fixed <- function(N_bin = 29, bin_size = 28){
T=36
T1=35
T2=35
# SCALE TO PRACTICE HMM
sc <- 1
# BINS for approximative HMM INTERGRATION
# N_bin = 29 # 19#59 # reduction based on Gamma plots # 99 # was 100 but we need 0 so to have 100 in total set it to 99
# bin_size = 28# 27#9 # odd so the midpoints are integer
# N_bin = 15 # 19#59 # reduction based on Gamma plots # 99 # was 100 but we need 0 so to have 100 in total set it to 99
# bin_size = 55#
# bin = rep(0,N_bin+1)
# # Bins' midpoints
# for (i in 0:(N_bin)){
#   bin[i+1] <- 0.5*(bin_size*(2*i+1)-1) # ith bin's midpoint
# }
# logfact <- function(x){sum(log(seq_len(x)))}
# logfact_m = rep(NaN, 7000)
# for (i in 0:(7000-1)){
#   logfact_m[i+1] <- logfact(i)
# }
# ZEROS TRICK
zeros <- rep(0,(T))
Up <-  2000
time <- seq(1,T,1)
# standardize the variable
stdT <- (time-mean(time))/sd(time)
# index record
y=c(0, 0, 1092.23, 1100.01, 1234.32, 1460.85, 1570.38, 1819.79, 1391.27, 1507.60,
1541.44, 1631.21, 1628.60, 1609.33, 1801.68, 1809.08, 1754.74, 1779.48, 1699.13,
1681.39, 1610.46, 1918.45, 1717.07, 1415.69, 1229.02, 1082.02, 1096.61, 1045.84,
1137.03, 981.1, 647.67, 992.65, 968.62, 926.83, 952.96, 865.64)/sc
# frost days
f=c(0.1922, 0.3082, 0.3082, -0.9676, 0.5401, 0.3082, 1.1995, 0.1921, -0.8526,
-1.0835, -0.6196, -1.1995, -0.5037, -0.1557, 0.0762, 2.628, -0.3877, -0.968,
1.9318, -0.6196, -0.3877, 1.700, 2.2797, 0.6561, -0.8516, -1.0835, -1.0835,
0.1922, 0.1922, -0.1557, -0.5037, -0.8516, 0.8880, -0.0398, -1.1995, 0)
m=matrix(c(
13,4,1,2,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1124,
0,16,4,3,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1259,
0,0,11,1,1,1,0,2,1,1,1,1,2,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1082,
0,0,0,10,4,2,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1595,
0,0,0,0,11,1,5,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1596,
0,0,0,0,0,9,5,4,0,2,2,2,1,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2091,
0,0,0,0,0,0,11,9,4,3,1,1,1,3,2,2,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1964,
0,0,0,0,0,0,0,8,4,2,0,0,0,1,2,3,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1942,
0,0,0,0,0,0,0,0,4,1,1,2,2,1,3,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2444,
0,0,0,0,0,0,0,0,0,8,2,2,2,6,1,5,2,1,3,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,3055,
0,0,0,0,0,0,0,0,0,0,16,1,1,1,2,3,2,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3412,
0,0,0,0,0,0,0,0,0,0,0,13,4,4,7,3,1,1,1,1,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,3907,
0,0,0,0,0,0,0,0,0,0,0,0,11,4,0,2,1,1,2,2,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,2538,
0,0,0,0,0,0,0,0,0,0,0,0,0,11,3,5,1,3,3,2,3,0,1,0,1,1,0,0,0,0,0,0,0,0,0,3270,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,5,0,5,4,2,1,2,3,0,0,0,1,0,0,0,0,0,0,0,0,3443,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,5,2,2,0,5,3,0,0,0,1,0,0,0,0,0,0,0,0,0,3132,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,4,6,1,3,3,2,0,1,0,0,1,0,1,0,0,0,0,0,3275,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,8,1,2,4,5,3,0,1,2,0,0,1,0,0,0,0,0,3447,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,2,2,3,3,3,1,0,0,0,0,0,0,0,0,0,0,3902,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,6,2,0,1,1,0,0,1,0,0,0,0,0,0,2860,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,7,6,4,0,0,2,0,0,0,1,2,0,0,1,4077,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,3,2,0,0,0,0,1,0,1,0,0,0,0,4017,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,2,5,2,0,2,2,2,0,0,0,0,0,4827,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,4,3,4,4,2,2,1,0,2,0,1,4732,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,1,2,2,3,0,0,3,0,0,5000,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,4,4,3,0,2,1,0,2,1,4769,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,4,2,4,2,2,3,1,1,3603,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,3,3,2,1,0,2,0,4147,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,4,6,1,0,1,0,4293,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,3,1,2,0,1,3455,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,5,2,2,1,3673,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,4,6,0,3900,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,5,1,3578,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,4481,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,4334),
nrow=35,ncol=36,byrow=T)
m[,36] = round(m[,36]/sc)
# Calculate the no. of birds released each year
rel <- array(0,T1)
for(t in 1:T1){
rel[t] <- sum(m[t,])
}
data <-list(T=T, T1=T1, T2=T2, y=y, f=f, m=m, rel=rel, stdT=stdT, N_bin=N_bin, bin_size=bin_size, Up=Up, zeros= zeros, sc=sc)
}
data_15_55 <- data_fun_fixed(N_bin = 29, bin_size = 28)
cat("Initialise the model:\n")
tstart=proc.time()
mod_15_55 <- jags.model('BKM_Bugs_HMM_approx_unifprior.R',data_15_55,inits,n.chains=cha,n.adapt=ada)
time_HMM_init_15_55 <- proc.time()-tstart
cat("Run the MCMC simulations:\n")
tstart=proc.time()
output_HMM_15_55 <- coda.samples(mod_15_55,params,n.iter=iter,thin=th)
time_HMM_sample_15_55  <- proc.time()-tstart
y[t] ~ dnorm(Na[t],tauy)
time_HMM_sample_15_55
time_HMM_init_15_55
1756.02 -1677.73
# G and P only for some initial runs to check whether they make sese...
params <- c('sigy','Na',
'alpha1','alphaa','alphar','alphal',
'beta1', 'betaa','betar', 'betal',
'midbin')
params
cat("Initialise the model:\n")
tstart=proc.time()
mod_10 <- jags.model('BKM_Bugs_HMM_approx_unifprior_sum_norm.R',data_10,inits,n.chains=cha,n.adapt=ada)
time_HMMnorm_init_10 <- proc.time()-tstart
cat("Run the MCMC simulations:\n")
tstart=proc.time()
outputHMMnorm_10 <- coda.samples(mod_10,params,n.iter=iter,thin=th)
setwd("Update/")
cat("Initialise the model:\n")
tstart=proc.time()
mod_10 <- jags.model('BKM_Bugs_HMM_approx_unifprior_sum_norm.R',data_10,inits,n.chains=cha,n.adapt=ada)
time_HMMnorm_init_10 <- proc.time()-tstart
cat("Run the MCMC simulations:\n")
tstart=proc.time()
outputHMMnorm <- coda.samples(mod,params,n.iter=iter,thin=th)
data_10
inits
mod_10 <- jags.model('BKM_Bugs_HMM_approx_unifprior_sum_norm.R',data_10,inits,n.chains=cha,n.adapt=ada)
