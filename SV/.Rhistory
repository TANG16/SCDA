library("rjags", lib.loc="Q:/NRJ4BFCY/R-3.1.2/library")
load("C:/Users/aba228/Dropbox/Research Visit/Ruth King/Codes/BKM/Update/BKM_ESS.RData")
unlist(TTT)
load("C:/Users/aba228/Dropbox/Research Visit/Ruth King/Codes/Heron/Adaptive/Heron_HMM_approx_iter30000_ada1000_linux_COMB_unifprior_norm.RData")
mat1_HMM_10_5 = as.matrix(output_10_5[1])
mat2_HMM_10_5 = as.matrix(output_10_5[2])
mat_names_HMM_adapt <- colnames(mat1_HMM_10_5)
mat1_HMM_50_40 = as.matrix(output_50_40[1])
mat2_HMM_50_40 = as.matrix(output_50_40[2])
mat1_HMM_100_70 = as.matrix(output_100_70[1])
mat2_HMM_100_70 = as.matrix(output_100_70[2])
mat_names_HMM_adapt
par(mfrow=c(2,1),oma=c(0,0,1.5,0))
plot(colMeans(mat1_HMM_10_5[,(1:72)]), type='l', xlab ="", ylab="", sub="X2")
lines(colMeans(mat1_HMM_50_40[,(1:72)]), type='l', col="blue")
lines(colMeans(mat1_HMM_100_70[,(1:72)]), type='l', col="red")
plot(colMeans(mat1_HMM_10_5[,72+(1:72)]), type='l', xlab ="", ylab="", sub="X4")
lines(colMeans(mat1_HMM_50_40[,72+(1:72)]), type='l', col="blue")
lines(colMeans(mat1_HMM_100_70[,72+(1:72)]), type='l', col="red")
mtext("Posterior means", outer=TRUE, cex=1)
legend(60,6000,c("10,5)","50,40","100,70"), col=("black","blue","red"))
legend(60,6000,c("10,5","50,40","100,70"), col=("black","blue","red"))
par(mfrow=c(2,1),oma=c(0,0,1.5,0))
plot(colMeans(mat1_HMM_10_5[,(1:72)]), type='l', xlab ="", ylab="", sub="X2")
lines(colMeans(mat1_HMM_50_40[,(1:72)]), type='l', col="blue")
lines(colMeans(mat1_HMM_100_70[,(1:72)]), type='l', col="red")
plot(colMeans(mat1_HMM_10_5[,72+(1:72)]), type='l', xlab ="", ylab="", sub="X4")
lines(colMeans(mat1_HMM_50_40[,72+(1:72)]), type='l', col="blue")
lines(colMeans(mat1_HMM_100_70[,72+(1:72)]), type='l', col="red")
mtext("Posterior means", outer=TRUE, cex=1)
legend(60,6000,c("10,5","50,40","100,70"), col=("black","blue","red"))
legend(60,6000,c("10,5","50,40","100,70"), col=("green","blue","red"))
legend(60,6000,c("10,5","50,40","100,70"))
par(mfrow=c(2,1),oma=c(0,0,1.5,0))
plot(colMeans(mat1_HMM_10_5[,(1:72)]), type='l', xlab ="", ylab="", sub="X2")
lines(colMeans(mat1_HMM_50_40[,(1:72)]), type='l', col="blue")
lines(colMeans(mat1_HMM_100_70[,(1:72)]), type='l', col="red")
plot(colMeans(mat1_HMM_10_5[,72+(1:72)]), type='l', xlab ="", ylab="", sub="X4")
lines(colMeans(mat1_HMM_50_40[,72+(1:72)]), type='l', col="blue")
lines(colMeans(mat1_HMM_100_70[,72+(1:72)]), type='l', col="red")
mtext("Posterior means", outer=TRUE, cex=1)
legend(60,6000,c("10,5","50,40","100,70"))
legend(60,1500,c("10,5","50,40","100,70"))
legend(60,4500,c("10,5","50,40","100,70"))
legend(60,1500,c("10,5","50,40","100,70"))
legend(60,2500,c("10,5","50,40","100,70"))
legend(65,2500,c("10,5","50,40","100,70"))
legend(65,2750,c("10,5","50,40","100,70"))
legend(67,2750,c("10,5","50,40","100,70"))
legend(67,2750,legend = c("10,5","50,40","100,70"), lty=1)
legend(67,2750,legend = c("10,5","50,40","100,70"), lty=1,
col=("black","blue","red"))
legend(67,2750,legend = c("10,5","50,40","100,70"), lty=1,
col=("blue","red"))
legend(67,2750,legend = c("10,5","50,40","100,70"), lty=1,
col=("blue"))
legend(67,2750,legend = c("10,5","50,40","100,70"), lty=1, col=("blue","red","black"))
par(mfrow=c(2,1),oma=c(0,0,1.5,0))
plot(colMeans(mat1_HMM_10_5[,(1:72)]), type='l', xlab ="", ylab="", sub="X2")
lines(colMeans(mat1_HMM_50_40[,(1:72)]), type='l', col="blue")
lines(colMeans(mat1_HMM_100_70[,(1:72)]), type='l', col="red")
plot(colMeans(mat1_HMM_10_5[,72+(1:72)]), type='l', xlab ="", ylab="", sub="X4")
lines(colMeans(mat1_HMM_50_40[,72+(1:72)]), type='l', col="blue")
lines(colMeans(mat1_HMM_100_70[,72+(1:72)]), type='l', col="red")
mtext("Posterior means", outer=TRUE, cex=1)
legend(67,2750,legend = c("10,5","50,40","100,70"), lty=1, col=c("black","blue","red"))
par(mfrow=c(2,1),oma=c(0,0,1.5,0))
plot(colMeans(mat1_HMM_10_5[,(1:72)]), type='l', xlab ="", ylab="", sub="X2")
lines(colMeans(mat1_HMM_50_40[,(1:72)]), type='l', col="blue")
lines(colMeans(mat1_HMM_100_70[,(1:72)]), type='l', col="red")
plot(colMeans(mat1_HMM_10_5[,72+(1:72)]), type='l', xlab ="", ylab="", sub="X4")
lines(colMeans(mat1_HMM_50_40[,72+(1:72)]), type='l', col="blue")
lines(colMeans(mat1_HMM_100_70[,72+(1:72)]), type='l', col="red")
mtext("Posterior means", outer=TRUE, cex=1)
legend(65,2750,legend = c("10,5","50,40","100,70"), lty=1, col=c("black","blue","red"))
par(mfrow=c(3,4))
for (i in c(1:4,7:10,5,6,11,12)){
plot(mat1_HMM_10_5[,2*72+i], type="l", xlab = "", ylab="", sub = mat_names_HMM_adapt[2*72+i])
lines(mat1_HMM_50_40[,2*72+i], type="l",  ol="blue")
lines(mat1_HMM_100_70[,2*72+i], type="l", col="red")
}
par(mfrow=c(3,4))
for (i in c(1:4,7:10,5,6,11,12)){
plot(mat1_HMM_10_5[,2*72+i], type="l", xlab = "", ylab="", sub = mat_names_HMM_adapt[2*72+i])
lines(mat1_HMM_50_40[,2*72+i], type="l", col="blue")
lines(mat1_HMM_100_70[,2*72+i], type="l", col="red")
}
load("C:/Users/aba228/Dropbox/Research Visit/Ruth King/Codes/SV/SV_HMM_Nbin30_changed_inits.RData")
mat1_HMM = as.matrix(output_sv_HMM[1])
mat2_HMM = as.matrix(output_sv_HMM[2])
mat_names_HMM <- colnames(mat1_HMM)
######## Params trace plots
par(mfrow = c(3,1))
for (i in 1:3){
plot(mat1_HMM[,T/2+i],type='l',col='blue', xlab="", ylab="", sub=mat_names_HMM[T/2+i])
lines(mat2_HMM[,T/2+i],type='l',col='red')
}
mat_names_DA
mat_names_HMM
T=1000
par(mfrow = c(3,1))
for (i in 1:3){
plot(mat1_HMM[,T/2+i],type='l',col='blue', xlab="", ylab="", sub=mat_names_HMM[T/2+i])
lines(mat2_HMM[,T/2+i],type='l',col='red')
}
par(mfrow = c(3,1))
for (i in 1:3){
plot(mat1_HMM[,T/2+i],type='l',col='blue', xlab="", ylab="", sub=mat_names_HMM[T/2+i])
lines(mat2_HMM[,T/2+i],type='l',col='red')
lines(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='black')
}
par(mfrow = c(3,1))
for (i in 1:3){
plot(mat1_HMM[,T/2+i],type='l',col='blue', xlab="", ylab="", sub=mat_names_HMM[T/2+i])
lines(mat2_HMM[,T/2+i],type='l',col='green')
lines(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red')
}
param
par(mfrow = c(3,1))
for (i in 1:3){
plot(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red', xlab="", ylab="", sub=mat_names_HMM[T/2+i])
lines(mat1_HMM[,T/2+i],type='l',col='blue')
lines(mat2_HMM[,T/2+i],type='l',col='green')
#   lines(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red')
}
plot(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red', xlab="", ylab="", sub=mat_names_HMM[T/2+i])
i
i=1
param[i]
mat_names_HMM[T/2+i]
plot(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red', xlab="", ylab="", sub=mat_names_HMM[T/2+i])
lines(mat1_HMM[,T/2+i],type='l',col='blue')
plotlines(mat1_HMM[,T/2+i],type='l',col='blue')
plot(mat1_HMM[,T/2+i],type='l',col='blue')
par(mfrow = c(1,1))
plot(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red', xlab="", ylab="", sub=mat_names_HMM[T/2+i])
lines(mat1_HMM[,T/2+i],type='l',col='blue')
plot(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red',ylim=c(-2,0), xlab="", ylab="", sub=mat_names_HMM[T/2+i])
lines(mat1_HMM[,T/2+i],type='l',col='blue')
lines(mat2_HMM[,T/2+i],type='l',col='green')
max(mat2_HMM[,T/2+i])
min(mat2_HMM[,T/2+i])
min(mat1_HMM[,T/2+i])
max(mat1_HMM[,T/2+i])
YL = matrix(c(-2,0, 0.94,1, 0,1), ncol = 2, byrow=TRUE)
par(mfrow = c(3,1))
for (i in 1:3){
plot(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red',ylim=YL[,i], xlab="", ylab="", sub=mat_names_HMM[T/2+i])
lines(mat1_HMM[,T/2+i],type='l',col='blue')
lines(mat2_HMM[,T/2+i],type='l',col='green')
#   lines(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red')
}
YL = matrix(c(-2,0, 0.94,1, 0,1), ncol = 2, byrow=TRUE)
1)
YL = matrix(c(-2,0, 0.94,1, 0,1), ncol = 2, byrow=TRUE))
YL = matrix(c(-2,0, 0.94,1, 0,1), ncol = 2, byrow=TRUE)
YL
YL[,i]
par(mfrow = c(3,1))
for (i in 1:3){
plot(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red',ylim= YL[i,], xlab="", ylab="", sub=mat_names_HMM[T/2+i])
lines(mat1_HMM[,T/2+i],type='l',col='blue')
lines(mat2_HMM[,T/2+i],type='l',col='green')
#   lines(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red')
}
YL = matrix(c(-2,0, 0.96,1, 0,0.2), ncol = 2, byrow=TRUE)
par(mfrow = c(3,1))
for (i in 1:3){
plot(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red',ylim= YL[i,], xlab="", ylab="", sub=mat_names_HMM[T/2+i])
lines(mat1_HMM[,T/2+i],type='l',col='blue')
lines(mat2_HMM[,T/2+i],type='l',col='green')
#   lines(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red')
}
######## Params trace plots
YL = matrix(c(-2,0, 0.96,1, 0,0.1), ncol = 2, byrow=TRUE)
par(mfrow = c(3,1))
for (i in 1:3){
plot(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red',ylim= YL[i,], xlab="", ylab="", sub=mat_names_HMM[T/2+i])
lines(mat1_HMM[,T/2+i],type='l',col='blue')
lines(mat2_HMM[,T/2+i],type='l',col='green')
#   lines(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red')
}
YL = matrix(c(-2,0, 0.96,1, 0,0.1), ncol = 2, byrow=TRUE)
lines(mat1_HMM[,T/2+i],type='l',col='blue')
par(mfrow = c(1,1))
plot(h_true,type='l')
# lines(colMeans(mat1_DA[1:5000,1:T]),col='red')
lines(seq(2,T,by=2),colMeans(mat1_HMM[,1:(T/2)]),col='blue')
lines(seq(2,T,by=2),colMeans(mat2_HMM[,1:(T/2)]),col='red')
sigma2_init = 0.1^2
load("C:/Users/aga/Dropbox/Research Visit/Ruth King/Codes/SV/SV_HMM_adapt_Nq30.RData")
mat1_HMM_adapt = as.matrix(output_sv_HMM_adapt[1])
mat2_HMM_adapt = as.matrix(output_sv_HMM_adapt[2])
mat_names_HMM_adapt <- colnames(mat1_HMM_adapt)
mean(mat1_HMM_adapt[,(T/2)+1])
mean(mat1_HMM_adapt[,(T/2)+2])
mean(mat1_HMM_adapt[,(T/2)+3])
T=1000
mean(mat1_HMM_adapt[,(T/2)+1])
mean(mat1_HMM_adapt[,(T/2)+2])
mean(mat1_HMM_adapt[,(T/2)+3])
mat_names_HMM_adapt
mat_names_HMM_adapt[1]
N_q
N_q = 30
qu <- c(0:(N_q-1))/N_q
mid <- qu+qu[2]/2
Up_h <- 10
mat_names_HMM_adapt[1:(N_q*(T/2))]
T
mat_names_HMM_adapt[N_q*(T/2)+(1:(N_q*(T/2)))] # "bin_mid[1,1]" - "bin_mid[10,500]"
mat_names_HMM_adapt[N_q*(T/2)+1] # "bin_mid[1,1]" - "bin_mid[10,500]"
mat_names_HMM_adapt[N_q*(T/2)+N_q*(T/2)] # "bin_mid[1,1]" - "bin_mid[10,500]"
mat_names_HMM_adapt[T*N_q+ T/2 + (1:3) ] #  "mu"     "phi"    "sigma2"
par(mfrow = c(3,1))
for (i in 1:3){
plot(mat1_HMM_adapt[,T*N_q+T/2+i],type='l',col='blue', xlab="", ylab="", sub=mat_names_HMM_adapt[T/2+i])
lines(mat2_HMM_adapt[,T*N_q+T/2+i],type='l',col='red')
}
param
par(mfrow = c(3,1))
for (i in 1:3){
plot(mat1_HMM_adapt[,T*N_q+T/2+i],type='l',col='blue', xlab="", ylab="", sub=mat_names_HMM_adapt[T/2+i])
lines(mat2_HMM_adapt[,T*N_q+T/2+i],type='l',col='green')
lines(param[i] + 0*mat2_HMM_adapt[,T*N_q+T/2+i],type='l',col='red')
}
mat_names_HMM_adapt[T*N_q+ (1:T/2)] # "h[1]" - "h[500]"
par(mfrow = c(1,1))
plot(colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)]),type='l',col='blue', xlab="", ylab="", sub='posterior mean h(t)')
lines(colMeans(mat2_HMM_adapt[,T*N_q+ (1:T/2)]),type='l',col='green')
lines(
h_true,type='l',col='red')
par(mfrow = c(1,1))
plot(seq(2,T,by="2"),colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)]),type='l',col='blue', xlab="", ylab="", sub='posterior mean h(t)')
lines(seq(2,T,by="2"),colMeans(mat2_HMM_adapt[,T*N_q+ (1:T/2)]),type='l',col='green')
lines(h_true,type='l',col='red')
par(mfrow = c(1,1))
plot(seq(2,T,by=2),colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)]),type='l',col='blue', xlab="", ylab="", sub='posterior mean h(t)')
lines(seq(2,T,by=2),colMeans(mat2_HMM_adapt[,T*N_q+ (1:T/2)]),type='l',col='green')
lines(h_true,type='l',col='red')
colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)]
colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)])
mat_names_HMM_adapt[T*N_q+ (1)]
colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)])
AAA=colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)])
AAA
BBB=mat_names_HMM_adapt[T*N_q+ (1:T/2)]
BBB
library(rjags)
library(coda)
set.seed(1345221)
save_on = TRUE
ada=1000
iter=1000
th=1
cha= 2 #2
phi <- 0.98
sigma <- 0.2
sigma2 <- sigma^2
# beta = 0.05;
beta <- 0.5;
mu <- 2*log(beta);
param <- c(mu, phi, sigma2)
sigma2_init = 0.15 # working case
# sigma2_init = 0.1^2
a1 = mu
P1 <- (sigma^2)/(1-phi^2)
################# simultated data ####
T <- 1000
N_q = 30
qu <- c(0:(N_q-1))/N_q
mid <- qu+qu[2]/2
Up_h <- 10
load("C:/Users/aba228/Dropbox/Research Visit/Ruth King/Codes/SV/SV_HMM_adapt_Nq303.RData")
setwd("SV")
mat1_HMM_adapt = as.matrix(output_sv_HMM_adapt[1])
mat2_HMM_adapt = as.matrix(output_sv_HMM_adapt[2])
mat_names_HMM_adapt <- colnames(mat1_HMM_adapt)
param
par(mfrow = c(3,1))
for (i in 1:3){
plot(mat1_HMM_adapt[,T/2+i],type='l',col='blue', xlab="", ylab="", sub=mat_names_HMM_adapt[T/2+i])
lines(mat2_HMM_adapt[,T/2+i],type='l',col='green')
lines(param[i] + 0*mat2_HMM_adapt[,T/2+i],type='l',col='red')
}
par(mfrow = c(1,1))
plot(h_true,type='l')
# lines(colMeans(mat1_DA[1:5000,1:T]),col='red')
lines(seq(2,T,by=2),colMeans(mat1_HMM_adapt[,1:(T/2)]),col='blue')
lines(seq(2,T,by=2),colMeans(mat2_HMM_adapt[,1:(T/2)]),col='green')
lines(h_true,type="l",col="red")
par(mfrow = c(3,3))
for (i in seq(100,900,by=100)){
plot(mat1_HMM_adapt[,i/2],type='l',col='blue', xlab="", ylab="", sub=mat_names_HMM_adapt[i/2])
lines(mat2_HMM_adapt[,i/2],type='l',col='green')
lines(h_true[i]+0*(mat2_HMM_adapt[,i/2]),type='l',col='red')
}
mat_names
mat_names_HMM_adapt
rm(list=ls())
library(rjags)
library(coda)
phi <- 0.98
sigma <- 0.2
sigma2 <- sigma^2
# beta = 0.05;
beta <- 0.5;
mu <- 2*log(beta);
a1 = mu
P1 <- (sigma^2)/(1-phi^2)
################# simultated data ####
T <- 1000
h_true <- rep(NaN,T)
h_true[1] <- a1 + sqrt(P1)*rnorm(1)
for (t in c(2:T)){
h_true[t] = mu + phi*(h_true[t-1]-mu) + sigma*rnorm(1)
}
y <- exp(h_true/2)*rnorm(T)
plot(y,type='l')
lines(h_true, type='l', col='red')
################# full DA ####
# inits <- function()(list(mu = 0, phi = 0.97, sigma = 0.15, h = var(y)*rep(1,T)))
inits <- function()(list(mu = 0, phi_star = (0.97+1)/2, sigma2_star = 1/(0.15^2), h = log(var(y))*rep(1,T)))
params <- c('mu','sigma2','phi','h')
data <- list(y=y,T=T)
sv_model_string <- "
model{
# define the observation process
for (t in 1:T){
y[t] ~ dnorm(0, 1.0/exp(h[t]))
}
# define the state process
for (t in 2:T){
h[t] ~ dnorm(mean_h[t],sigma2_star)
mean_h[t] <- mu + phi*(h[t-1] - mu)
}
h[1] ~ dnorm(mean_h[1],sigma2_star)
mean_h[1] <- mu + phi*(h0 - mu)
h0 ~ dnorm(mean_h0,1/P1)
P1 <- sigma2/(1-phi^2)
mean_h0 <- mu
# define the priors for parameters
mu ~ dnorm(0,0.1)
# (phi+1)/2 ~ betapdf((phi+1)/2, 20, 1.5)
phi <- 2*phi_star - 1
phi_star ~ dbeta(20, 1.5)
# (phi+1)/2 ~ dbeta(20, 1.5)
# 1/sigma2 ~ gampdf(1./s2, 5/2, 0.05/2);
sigma2 <- 1/sigma2_star
#   sigma2_star ~ dgamma(5/2, 2/0.05) # shape and rate
sigma2_star ~ dgamma(5/2, 0.05/2) # shape and rate
# 1/sigma2  ~  dgamma(5/2, 2/0.05)
}
"
### JAGS
tstart = proc.time()
sv_model <- jags.model(textConnection(sv_model_string),
data=data, inits=inits, n.chains = 2, n.adapt = 1000)
time_init_DA = proc.time()-tstart
tstart = proc.time()
output_sv <- coda.samples(sv_model, params, n.iter = 10000, thin=1)
time_sample_DA = proc.time()-tstart
par(mfrow = c(3,3))
for (i in seq(100,900,by=100)){
plot(mat1_HMM_adapt[,i/2],type='l',col='blue', xlab="", ylab="", sub=mat_names_HMM_adapt[i/2])
lines(mat2_HMM_adapt[,i/2],type='l',col='green')
lines(h_true[i]+0*(mat2_HMM_adapt[,i/2]),type='l',col='red')
}
mat1_HMM = as.matrix(output_sv_HMM[1])
mat2_HMM = as.matrix(output_sv_HMM[2])
mat_names_HMM <- colnames(mat1_HMM)
mat1_DA = as.matrix(output_sv_DA[1])
mat2_DA = as.matrix(output_sv_DA[2])
mat_names_DA <- colnames(mat1_DA)
output_sv_DA<-output_sv
rm(output_sv)
mat1_DA = as.matrix(output_sv_DA[1])
mat2_DA = as.matrix(output_sv_DA[2])
mat_names_DA <- colnames(mat1_DA)
par(mfrow = c(3,1))
for (i in 1:3){
plot(mat1_DA[,T+i],type='l',col='blue', xlab="", ylab="", sub=mat_names_DA[T+i])
lines(mat2_DA[,T+i],type='l',col='green')
lines(param[i] + 0*mat2_DA[,T+i],type='l',col='red')
}
param <- c(mu, phi, sigma2)
par(mfrow = c(3,1))
for (i in 1:3){
plot(mat1_DA[,T+i],type='l',col='blue', xlab="", ylab="", sub=mat_names_DA[T+i])
lines(mat2_DA[,T+i],type='l',col='green')
lines(param[i] + 0*mat2_DA[,T+i],type='l',col='red')
}
par(mfrow = c(3,1))
for (i in 1:3){
plot(mat1_DA[1:1000,T+i],type='l',col='blue', xlab="", ylab="", sub=mat_names_DA[T+i])
lines(mat2_DA[1:1000,T+i],type='l',col='green')
lines(param[i] + 0*mat2_DA[1:1000,T+i],type='l',col='red')
}
# sigma2_init = 0.15 # working case
rm(list = ls())
library(rjags)
library(coda)
set.seed(1345221)
save_on = TRUE
ada=1000
iter=1000
th=1
cha= 2 #2
phi <- 0.98
sigma <- 0.2
sigma2 <- sigma^2
# beta = 0.05;
beta <- 0.5;
mu <- 2*log(beta);
sigma2_init = 0.15 # working case
# sigma2_init = 0.1^2
param <- c(mu, phi, sigma2)
a1 = mu
P1 <- (sigma^2)/(1-phi^2)
################# simultated data ####
T <- 2000
h_true <- rep(NaN,T)
load("C:/Users/aba228/Dropbox/Research Visit/Ruth King/Codes/SV/SV_HMM_Nbin30_T2000.RData")
N_bin <- 30 # 10 #30
bin_range <- 4
Up_h <- 10
mat1_DA = as.matrix(output_sv_DA[1])
mat2_DA = as.matrix(output_sv_DA[2])
mat_names_DA <- colnames(mat1_DA)
mat1_HMM = as.matrix(output_sv_HMM[1])
mat2_HMM = as.matrix(output_sv_HMM[2])
mat_names_HMM <- colnames(mat1_HMM)
par(mfrow = c(3,1))
for (i in 1:3){
#   plot(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red',ylim= YL[i,], xlab="", ylab="", sub=mat_names_HMM[T/2+i])
plot(mat1_HMM[,T/2+i],type='l',col='blue', xlab="", ylab="", sub=mat_names_HMM[T/2+i])
#   lines(mat1_HMM[,T/2+i],type='l',col='blue')
lines(mat2_HMM[,T/2+i],type='l',col='green')
lines(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red')
#   lines(param[i] + 0*mat2_HMM[,T/2+i],type='l',col='red')
}
par(mfrow = c(1,1))
# lines(colMeans(mat1_DA[1:5000,1:T]),col='red')
plot(seq(2,T,by=2),colMeans(mat1_HMM[,1:(T/2)]),type="l",col='blue', xlab="", ylab="",sub="Posterior means")
lines(seq(2,T,by=2),colMeans(mat2_HMM[,1:(T/2)]),type="l",col='green')
lines(h_true,type="l",col="red")
par(mfrow = c(3,1))
for (i in 1:3){
plot(mat1_HMM[7000:10000,T/2+i],type='l',col='blue', xlab="", ylab="", sub=mat_names_HMM[T/2+i])
lines(mat2_HMM[7000:10000,T/2+i],type='l',col='red')
}
par(mfrow = c(3,1))
for (i in 1:3){
plot(mat1_HMM[,T/2+i],type='l',col='blue', xlab="", ylab="", sub=mat_names_HMM[T/2+i])
lines(mat2_HMM[,T/2+i],type='l',col='red')
}
par(mfrow = c(3,3))
for (i in seq(100,900,by=100)){
plot(mat1_HMM_adapt[,i/2],type='l',col='blue', xlab="", ylab="", sub=mat_names_HMM_adapt[i/2])
lines(mat2_HMM_adapt[,i/2],type='l',col='green')
lines(h_true[i]+0*(mat2_HMM_adapt[,i/2]),type='l',col='red')
}
################# HMM WIT
par(mfrow = c(3,3))
for (i in seq(100,900,by=100)){
plot(mat1_HMM[,i/2],type='l',col='blue', xlab="", ylab="", sub=mat_names_HMM[i/2])
lines(mat2_HMM[,i/2],type='l',col='green')
lines(h_true[i]+0*(mat2_HMM[,i/2]),type='l',col='red')
}
load("C:/Users/aba228/Dropbox/Research Visit/Ruth King/Codes/SV/SV_DA_T2000.RData")
mat1_DA = as.matrix(output_sv_DA[1])
mat2_DA = as.matrix(output_sv_DA[2])
mat_names_DA <- colnames(mat1_DA)
par(mfrow = c(3,1))
for (i in 1:3){
plot(mat1_DA[,T+i],type='l',col='blue', xlab="", ylab="", sub=mat_names_DA[T+i])
lines(mat2_DA[,T+i],type='l',col='green')
lines(param[i] + 0*mat2_DA[,T+i],type='l',col='red')
}
par(mfrow = c(1,1))
plot(colMeans(mat1_DA[,1:T]),type='l',col='blue', xlab="", ylab="", sub="mean h")
lines(colMeans(mat2_DA[,1:T]),type='l',col='green')
lines(h_true,type="l",col="red")
par(mfrow = c(3,3))
for (i in seq(100,900,by=100)){
plot(mat1_DA[,i/2],type='l',col='blue', xlab="", ylab="", sub=mat_names_DA[i/2])
lines(mat2_DA[,i/2],type='l',col='green')
lines(h_true[i]+0*(mat2_DA[,i/2]),type='l',col='red')
}
load("C:/Users/aba228/Dropbox/Research Visit/Ruth King/Codes/SV/SV_HMM_adapt_Nq30_T2000.RData")
mat1_HMM_adapt = as.matrix(output_sv_HMM_adapt[1])
mat2_HMM_adapt = as.matrix(output_sv_HMM_adapt[2])
mat_names_HMM_adapt <- colnames(mat1_HMM_adapt)
ESS_DA = lapply(output_sv_DA,effectiveSize)
ESS_DA1 = as.matrix(ESS_DA[[1]])
ESS_DA2 = as.matrix(ESS_DA[[2]])
ESS_HMM = lapply(output_sv_HMM,effectiveSize)
ESS_HMM1 = as.matrix(ESS_HMM[[1]])
ESS_HMM2 = as.matrix(ESS_HMM[[2]])
ESS_HMM_adapt = lapply(output_sv_HMM_adapt,effectiveSize)
ESS_HMM_adapt1 = as.matrix(ESS_HMM_adapt[[1]])
ESS_HMM_adapt2 = as.matrix(ESS_HMM_adapt[[2]])
View(ESS_DA1)
View(ESS_HMM1)
View(ESS_HMM_adapt1)
#################
par(mfrow = c(1,1))
plot(ESS_DA1[seq(2,T,by=2)],type="l",col="red", xlab="", ylab="")
lines(ESS_DA2[seq(2,T,by=2)],type="l",col="pink")
lines(ESS_HMM1[1:T/2],type="l",col="green")
lines(ESS_HMM2[1:T/2],type="l",col="darkgreen")
lines(ESS_HMM_adapt1[1:T/2],type="l",col="blue")
