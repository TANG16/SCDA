plot(colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)]),type='l',col='blue', xlab="", ylab="", sub='posterior mean h(t)')
lines(colMeans(mat2_HMM_adapt[,T*N_q+ (1:T/2)]),type='l',col='green')
lines(
h_true,type='l',col='red')
par(mfrow = c(1,1))
plot(seq(2,T,by="2"),colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)]),type='l',col='blue', xlab="", ylab="", sub='posterior mean h(t)')
lines(seq(2,T,by="2"),colMeans(mat2_HMM_adapt[,T*N_q+ (1:T/2)]),type='l',col='green')
lines(h_true,type='l',col='red')
par(mfrow = c(1,1))
plot(seq(2,T,by=2),colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)]),type='l',col='blue', xlab="", ylab="", sub='posterior mean h(t)')
lines(seq(2,T,by=2),colMeans(mat2_HMM_adapt[,T*N_q+ (1:T/2)]),type='l',col='green')
lines(h_true,type='l',col='red')
colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)]
colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)])
mat_names_HMM_adapt[T*N_q+ (1)]
colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)])
AAA=colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)])
AAA
BBB=mat_names_HMM_adapt[T*N_q+ (1:T/2)]
BBB
load("C:/Users/aga/Dropbox/Research Visit/Ruth King/Codes/SV/SV_HMM_adapt_Nq25_T2000_selected.RData")
time_sample_HMM_adapt
mean(ESS1_HMM_adapt[1:1000])
mean(ESS2_HMM_adapt[1:1000])
ESS1_HMM_adapt[1:3]
ESS2_HMM_adapt[1:3]
plot(seq(2,2000, by=2),mean_H1_HMM_adapt)
plot(seq(2,2000, by=2),mean_H2_HMM_adapt,col="red")
plot(h_true,type="l",col="black")
lines(seq(2,2000, by=2),mean_H1_HMM_adapt,col="blue")
lines(seq(2,2000, by=2),mean_H2_HMM_adapt,col="green")
colMeans(theta1_HMM_adapt)
colMeans(theta2_HMM_adapt)
load("C:/Users/aga/Dropbox/Research Visit/Ruth King/Codes/SV/SV_HMM_Nbin25_T2000_selected.RData")
time_sample_HMM
mean(ESS1_HMM[1:1000])
mean(ESS2_HMM[1:1000])
ESS1_HMM[1:3]
ESS2_HMM[1:3]
time_sample_HMM_adapt
mean(ESS1_HMM_adapt[1:1000])
mean(ESS2_HMM_adapt[1:1000])
ESS1_HMM_adapt[1:3]
ESS2_HMM_adapt[1:3]
time_init_HMM[3]
time_sample_HMM_adapt[3]
mean(ESS1_HMM_adapt[1:1000])
mean(ESS2_HMM_adapt[1:1000])
ESS1_HMM_adapt[1:3]
ESS2_HMM_adapt[1:3]
time_init_HMM[3]
time_sample_HMM[3]
mean(ESS1_HMM[1:1000])
mean(ESS2_HMM[1:1000])
ESS1_HMM[1:3]
ESS2_HMM[1:3]
time_init_HMM[3]
time_sample_HMM_adapt[3]
mean(ESS1_HMM_adapt[1:1000])
mean(ESS2_HMM_adapt[1:1000])
ESS1_HMM_adapt[1:3]
ESS2_HMM_adapt[1:3]
time_init_HMM_adapt[3]
load("C:/Users/aga/Dropbox/Research Visit/Ruth King/Codes/SV/SV_DA_T2000_selected.RData")
T=2000
plot(ESS1_DA[seq(2,T,by=2)],ylim=c(0,1000),type='l',col='red',xlab="",ylab="")
lines(ESS2_DA[seq(2,T,by=2)],type='l',col='darkred')
lines(ESS1_HMM[c(1:T/2)],type='l',col='green')
lines(ESS2_HMM[c(1:T/2)],type='l',col='darkgreen')
lines(ESS1_HMM_adapt[c(1:T/2)],type='l',col='blue')
lines(ESS2_HMM_adapt[c(1:T/2)],type='l',col='darkblue')
View(H_short2_HMM_adapt)
sv_model_HMM
View(theta1_DA)
sv_model_HMM$data()
sv_model_HMM$data$N_bin
View(H_short2_HMM)
sv_model_HMM$data
sv_model_HMM$data()
sv_model_HMM$data()$N_bin
N_bin = sv_model_HMM$data()$N_bin
N_q = sv_model_HMM_adapt$data()$N_q
N_bin = sv_model_HMM$data()$N_bin
N_q = sv_model_HMM_adapt$data()$N_q
N_bin
N_q
plot(ESS1_DA[seq(2,T,by=2)],ylim=c(0,1000),type='l',col='red',xlab="",ylab="",
sub=paste("ESS N_bin=",toString(N_bin),", Nq=",toString(N_q),sep=""))
lines(ESS2_DA[seq(2,T,by=2)],type='l',col='darkred')
lines(ESS1_HMM[c(1:T/2)],type='l',col='green')
lines(ESS2_HMM[c(1:T/2)],type='l',col='darkgreen')
lines(ESS1_HMM_adapt[c(1:T/2)],type='l',col='blue')
lines(ESS2_HMM_adapt[c(1:T/2)],type='l',col='darkblue')
legend(0,1000,legend = c("DA","HMM",HMM_adapt),col=c("red","green","blue"))
plot(ESS1_DA[seq(2,T,by=2)],ylim=c(0,1000),type='l',col='red',xlab="",ylab="",
sub=paste("ESS N_bin=",toString(N_bin),", Nq=",toString(N_q),sep=""))
lines(ESS2_DA[seq(2,T,by=2)],type='l',col='darkred')
lines(ESS1_HMM[c(1:T/2)],type='l',col='green')
lines(ESS2_HMM[c(1:T/2)],type='l',col='darkgreen')
lines(ESS1_HMM_adapt[c(1:T/2)],type='l',col='blue')
lines(ESS2_HMM_adapt[c(1:T/2)],type='l',col='darkblue')
legend(0,1000,legend = c("DA","HMM","HMM_adapt"),col=c("red","green","blue"))
legend
? legend
legend(0,1000,legend = c("DA","HMM","HMM_adapt"),col=c("red","green","blue"))
legend(0,1000,legend = c("DA","HMM","HMM_adapt"),col=c("red"))
legend(0,1000,legend = c("DA","HMM","HMM_adapt"),pch =10,col=c("red","green","blue"))
plot(ESS1_DA[seq(2,T,by=2)],ylim=c(0,1000),type='l',col='red',xlab="",ylab="",
sub=paste("ESS N_bin=",toString(N_bin),", Nq=",toString(N_q),sep=""))
lines(ESS2_DA[seq(2,T,by=2)],type='l',col='darkred')
lines(ESS1_HMM[c(1:T/2)],type='l',col='green')
lines(ESS2_HMM[c(1:T/2)],type='l',col='darkgreen')
lines(ESS1_HMM_adapt[c(1:T/2)],type='l',col='blue')
lines(ESS2_HMM_adapt[c(1:T/2)],type='l',col='darkblue')
legend(0,1000,legend = c("DA","HMM","HMM_adapt"),lty =1,col=c("red","green","blue"))
plot(h_true,ylim=c(0,1000),type='l',col='black',xlab="",ylab="",
sub=paste("posterior mean h N_bin=",toString(N_bin),", Nq=",toString(N_q),sep=""))
lines(mean_H1_DA,type='l',col='red')
lines(mean_H2_DA,type='l',col='darkred')
lines(seq(2,T,by=2),mean_H1_HMM,type='l',col='green')
lines(seq(2,T,by=2),mean_H2_HMM,type='l',col='darkgreen')
lines(seq(2,T,by=2),mean_H1_HMM_adapt,type='l',col='blue')
lines(seq(2,T,by=2),mean_H2_HMM_adapt,type='l',col='darkblue')
legend(0,1000,legend = c("true","DA","HMM","HMM_adapt"),lty =1,col=c("black","red","green","blue"))
plot(h_true,ylim=c(0,1000),type='l',col='black',xlab="",ylab="",
sub=paste("posterior mean h N_bin=",toString(N_bin),", Nq=",toString(N_q),sep=""))
lines(mean_H1_DA,type='l',col='red')
lines(mean_H2_DA,type='l',col='darkred')
lines(seq(2,T,by=2),mean_H1_HMM,type='l',col='green')
lines(seq(2,T,by=2),mean_H2_HMM,type='l',col='darkgreen')
lines(seq(2,T,by=2),mean_H1_HMM_adapt,type='l',col='blue')
lines(seq(2,T,by=2),mean_H2_HMM_adapt,type='l',col='darkblue')
legend(0,1000,legend = c("true","DA","HMM","HMM_adapt"),lty =1,col=c("black","red","green","blue"))
plot(h_true,ylim=c(-10,10),type='l',col='black',xlab="",ylab="",
sub=paste("posterior mean h N_bin=",toString(N_bin),", Nq=",toString(N_q),sep=""))
lines(mean_H1_DA,type='l',col='red')
lines(mean_H2_DA,type='l',col='darkred')
lines(seq(2,T,by=2),mean_H1_HMM,type='l',col='green')
lines(seq(2,T,by=2),mean_H2_HMM,type='l',col='darkgreen')
lines(seq(2,T,by=2),mean_H1_HMM_adapt,type='l',col='blue')
lines(seq(2,T,by=2),mean_H2_HMM_adapt,type='l',col='darkblue')
legend(0,1000,legend = c("true","DA","HMM","HMM_adapt"),lty =1,col=c("black","red","green","blue"))
plot(h_true,type='l',col='black',xlab="",ylab="",
sub=paste("posterior mean h N_bin=",toString(N_bin),", Nq=",toString(N_q),sep=""))
lines(mean_H1_DA,type='l',col='red')
lines(mean_H2_DA,type='l',col='darkred')
lines(seq(2,T,by=2),mean_H1_HMM,type='l',col='green')
lines(seq(2,T,by=2),mean_H2_HMM,type='l',col='darkgreen')
lines(seq(2,T,by=2),mean_H1_HMM_adapt,type='l',col='blue')
lines(seq(2,T,by=2),mean_H2_HMM_adapt,type='l',col='darkblue')
legend(0,1000,legend = c("true","DA","HMM","HMM_adapt"),lty =1,col=c("black","red","green","blue"))
legend(0,-3,legend = c("true","DA","HMM","HMM_adapt"),lty =1,col=c("black","red","green","blue"))
colMeans(theta1_DA)
colMeans(theta2_DA)
colMeans(theta1_HMM)
colMeans(theta2_HMM)
colMeans(theta1_HMM_adapt)
colMeans(theta2_HMM_adapt)
load("C:/Users/aba228/Dropbox/New Projects/Censored Posterior/PCP/include/data/results_rugarch_all_data.RData")
View(coefs_all)
View(coefs_short_all)
View(resid_mom_all)
View(resid_mom_short_all)
load("C:/Users/aba228/Dropbox/Research Visit/Ruth King/Codes/SV/SV_HMM_adapt_Nq30_T2000_selected_mid_BIN100.RData")
time = [1998,(2017 + 8/12)];
time = c(1998,(2017 + 8/12));
(2017 + 8/12)
load("C:/Users/aba228/Dropbox/Research Visit/Ruth King/Codes/SV/SV_emp_DA_T2000_selected.RData")
T=2000
plot(mean_H1_DA,type='l',col='red')
lines(mean_H2_DA,type='l',col='darkred')
colMeans(theta1_DA)
colMeans(theta2_DA)
par(mfrow=c(3,1))
for (i in 1:3){
plot(theta1_DA[,i],type= 'l',xlab='',ylab='',col='blue')
lines(theta1_DA[,i],type= 'l',xlab='',ylab='',col='darkblue')
}
plot(mean_H1_DA,type='l',col='red',xlab="",ylab="")
lines(mean_H2_DA,type='l',col='darkred')
sum(100+750*seq(0,24)^2)
seq(0,24)
ln(44/7)
lon(44/7)
log(44/7)
log(2+5*0.25*2.5)
44*7.5
log(2+5*1)
log(2+5*(6/5)*(3/5))
log(2+5*(3/70)*(3/70))
c(1,2,3)
c(1,2,3)=3
c(1,2,3)-3
c(1,2,3)==3
any(c(1,2,3)==3)
? any
log(2+5*(0.75)*(1.5))
log(2+5*(6/5)*(0.6))
log(2+5*(17/10)*(13/20))
setwd("SV/UCSV")
rm(list = ls())
library(rjags)
library(coda)
set.seed(1345221)
save_on = TRUE
ada=10000
iter=100000
th=1
cha= 2 #2
################# READ DATA ####
# data = xlsread('OECD_G7CPI.xls', 'D51:J266');
# country_id = 7; %1: Canada; 2: France; 3: Germany; 4: Italy; 5: Japan; 6: UK; 7: US
D = 7
if (D == 0)
{
y <- read.csv("USCPI.csv")[,1]
}else
{
y <- read.csv("OECD_G7CPI.csv")[,D]
T <- length(y)
y <- log(y[2:T]/y[1:(T-1)])*400;
}
T <- length(y)
plot(y,type='l',xlab='',ylab='')
################# full DA ####
# inits <- function()(list(mu = 0, phi = 0.97, sigma = 0.15, h = var(y)*rep(1,T)))
inits <- function()(list(h0 = 0, g0 = 0, omega_h = sqrt(0.2), omega_g = sqrt(0.2),
h = log(var(y))*rep(1,T),  g = log(var(y))*rep(1,T)))
params <- c('h0','g0','omega_h','omega_g', 'tau','h', 'g')
data <- list(y=y,T=T,tau0=0,V_tau = 10, V_h=10, V_g=10)
ucsv_model_string <- "
model{
# define the observation process for inflation
for (t in 1:T){
y[t] ~ dnorm(tau[t], 1.0/exp(h0 + omega_h*h[t]))
}
# define the state process for the trend
for (t in 2:T){
tau[t] ~ dnorm(tau[t-1], 1.0/exp(g0 + omega_g*g[t]))
}
# define the state process for the volatilities
for (t in 2:T){
h[t] ~ dnorm(h[t-1],1)
g[t] ~ dnorm(g[t-1],1)
}
# initialise
tau[1] ~ dnorm(tau0, 1/(V_tau*exp(g0 + omega_g*g[1])))
h[1] ~ dnorm(0,1/V_h)
g[1] ~ dnorm(0,1/V_g)
# define the priors for parameters
omega_h ~ dnorm(0,1/(0.2))
omega_g ~ dnorm(0,1/(0.2))
h0 ~ dnorm(0,1/10)
g0 ~ dnorm(0,1/10)
}
"
### JAGS #####
tstart = proc.time()
ucsv_model_DA <- jags.model(textConnection(ucsv_model_string),
data=data, inits=inits, n.chains = cha, n.adapt = ada)
time_init_DA = proc.time()-tstart
tstart = proc.time()
output_ucsv_DA <- coda.samples(ucsv_model_DA, params, n.iter = iter, thin=th)
time_sample_DA = proc.time()-tstart
# save selected output
mat1_DA = as.matrix(output_ucsv_DA[1])
mat2_DA = as.matrix(output_ucsv_DA[2])
mat_names_DA <- colnames(mat1_DA)
ESS_DA = lapply(output_ucsv_DA,effectiveSize)
ESS1_DA = as.matrix(ESS_DA[[1]])
ESS2_DA = as.matrix(ESS_DA[[2]])
mat_names_DA[1:T] # g[1] : g[258]
mat_names_DA[T+1] # g0
mat_names_DA[(T+2):(2*T+1)] # h[1] : h[258]
mat_names_DA[(2*T+2)] # h0
mat_names_DA[(2*T+2+1)]  # omega_g
mat_names_DA[(2*T+2+2)]  # omega_h
mat_names_DA[(2*T+2+1):(3*T+4)] # tau[1] : tau[258]
theta1_DA = mat1_DA[,c(T+1,2*T+2,2*T+2+1,2*T+2+2)]
theta2_DA = mat2_DA[,c(T+1,2*T+2,2*T+2+1,2*T+2+2)]
colnames(theta1_DA) = c('g0','h0','omega_g','omega_h')
colnames(theta2_DA) = c('g0','h0','omega_g','omega_h')
tau1_sel_DA = mat1_DA[,seq((2*T+2+1),(3*T+4),by=50)]
tau2_sel_DA = mat2_DA[,seq((2*T+2+1),(3*T+4),by=50)]
mean_tau1_DA = colMeans(mat1_DA[,(2*T+2+1):(3*T+4)])
mean_tau2_DA = colMeans(mat2_DA[,(2*T+2+1):(3*T+4)])
g1_sel_DA = mat1_DA[,seq(1,T,by=50)]
g2_sel_DA = mat2_DA[,seq(1,T,by=50)]
mean_g1_DA = colMeans(mat1_DA[,1:T])
mean_g2_DA = colMeans(mat2_DA[,1:T])
h1_sel_DA = mat1_DA[,seq((T+2),(2*T+1),by=50)]
h2_sel_DA = mat2_DA[,seq((T+2),(2*T+1),by=50)]
mean_h1_DA = colMeans(mat1_DA[,(T+2):(2*T+1)])
mean_h2_DA = colMeans(mat2_DA[,(T+2):(2*T+1)])
if (save_on) {
save(file=paste("UCSV_emp_DA_data",toString(D),".RData",sep=""),
y, ucsv_model_DA, time_init_DA, time_sample_DA, mat_names_DA,
ESS1_DA, ESS2_DA, theta1_DA, theta2_DA,
tau1_sel_DA, tau2_sel_DA, mean_tau1_DA, mean_tau2_DA,
g1_sel_DA, g2_sel_DA, mean_g1_DA, mean_g2_DA,
h1_sel_DA, h2_sel_DA, mean_h1_DA, mean_h2_DA)
}
# quit()
par(mfrow=c(3,1))
plot(mean_tau1_DA,type='l',col='blue',xlab="",ylab="")
lines(mean_tau2_DA,type='l',col='darkblue')
plot(mean_h1_DA,type='l',col='red',xlab="",ylab="")
lines(mean_h2_DA,type='l',col='darkred')
plot(mean_g1_DA,type='l',col='green',xlab="",ylab="")
lines(mean_g2_DA,type='l',col='darkgreen')
par(mfrow=c(3,M))
for (i in 1:M){
plot(tau1_sel_DA[,i],type= 'l',xlab='',ylab='',col='blue')
lines(tau2_sel_DA[,i],type= 'l',xlab='',ylab='',col='darkblue')
}
for (i in 1:M){
plot(h1_sel_DA[,i],type= 'l',xlab='',ylab='',col='red')
lines(h2_sel_DA[,i],type= 'l',xlab='',ylab='',col='darkred')
}
for (i in 1:M){
plot(g1_sel_DA[,i],type= 'l',xlab='',ylab='',col='green')
lines(g2_sel_DA[,i],type= 'l',xlab='',ylab='',col='darkgreen')
}
if (D > 0){
M = 5
} else{
M = 6
}
par(mfrow=c(3,M))
for (i in 1:M){
plot(tau1_sel_DA[,i],type= 'l',xlab='',ylab='',col='blue')
lines(tau2_sel_DA[,i],type= 'l',xlab='',ylab='',col='darkblue')
}
for (i in 1:M){
plot(h1_sel_DA[,i],type= 'l',xlab='',ylab='',col='red')
lines(h2_sel_DA[,i],type= 'l',xlab='',ylab='',col='darkred')
}
for (i in 1:M){
plot(g1_sel_DA[,i],type= 'l',xlab='',ylab='',col='green')
lines(g2_sel_DA[,i],type= 'l',xlab='',ylab='',col='darkgreen')
}
f
colMeans(theta1_HMM_adapt)
colMeans(theta2_HMM_adapt)
colMeans(theta1_DA)
colMeans(theta2_DA)
par(mfrow=c(3,1))
plot(mean_tau1_DA,type='l',col='blue',xlab="",ylab="")
lines(mean_tau2_DA,type='l',col='darkblue')
plot(mean_h1_DA,type='l',col='red',xlab="",ylab="")
lines(mean_h2_DA,type='l',col='darkred')
plot(-mean_g1_DA,type='l',col='green',xlab="",ylab="")
lines(-mean_g2_DA,type='l',col='darkgreen')
log(var(y))
# setwd("SV/UCSV")
rm(list = ls())
library(rjags)
library(coda)
set.seed(1345221)
save_on = TRUE
ada=10000
iter=100000
th=1
cha= 2 #2
################# READ DATA ####
# data = xlsread('OECD_G7CPI.xls', 'D51:J266');
# country_id = 7; %1: Canada; 2: France; 3: Germany; 4: Italy; 5: Japan; 6: UK; 7: US
D = 7
if (D == 0)
{
y <- read.csv("USCPI.csv")[,1]
}else
{
y <- read.csv("OECD_G7CPI.csv")[,D]
T <- length(y)
y <- log(y[2:T]/y[1:(T-1)])*400;
}
T <- length(y)
plot(y,type='l',xlab='',ylab='')
################# full DA ####
g_sgn = -1
# inits <- function()(list(mu = 0, phi = 0.97, sigma = 0.15, h = var(y)*rep(1,T)))
inits <- function()(list(h0 = 0, g0 = 0, omega_h = sqrt(0.2), omega_g = sqrt(0.2),
h = log(var(y))*rep(1,T),  g = g_sgn*log(var(y))*rep(1,T)))
params <- c('h0','g0','omega_h','omega_g', 'tau','h', 'g')
data <- list(y=y,T=T,tau0=0,V_tau = 10, V_h=10, V_g=10)
ucsv_model_string <- "
model{
# define the observation process for inflation
for (t in 1:T){
y[t] ~ dnorm(tau[t], 1.0/exp(h0 + omega_h*h[t]))
}
# define the state process for the trend
for (t in 2:T){
tau[t] ~ dnorm(tau[t-1], 1.0/exp(g0 + omega_g*g[t]))
}
# define the state process for the volatilities
for (t in 2:T){
h[t] ~ dnorm(h[t-1],1)
g[t] ~ dnorm(g[t-1],1)
}
# initialise
tau[1] ~ dnorm(tau0, 1/(V_tau*exp(g0 + omega_g*g[1])))
h[1] ~ dnorm(0,1/V_h)
g[1] ~ dnorm(0,1/V_g)
# define the priors for parameters
omega_h ~ dnorm(0,1/(0.2))
omega_g ~ dnorm(0,1/(0.2))
h0 ~ dnorm(0,1/10)
g0 ~ dnorm(0,1/10)
}
"
### JAGS #####
tstart = proc.time()
ucsv_model_DA <- jags.model(textConnection(ucsv_model_string),
data=data, inits=inits, n.chains = cha, n.adapt = ada)
time_init_DA = proc.time()-tstart
tstart = proc.time()
output_ucsv_DA <- coda.samples(ucsv_model_DA, params, n.iter = iter, thin=th)
time_sample_DA = proc.time()-tstart
# save selected output
mat1_DA = as.matrix(output_ucsv_DA[1])
mat2_DA = as.matrix(output_ucsv_DA[2])
mat_names_DA <- colnames(mat1_DA)
ESS_DA = lapply(output_ucsv_DA,effectiveSize)
ESS1_DA = as.matrix(ESS_DA[[1]])
ESS2_DA = as.matrix(ESS_DA[[2]])
mat_names_DA[1:T] # g[1] : g[258]
mat_names_DA[T+1] # g0
mat_names_DA[(T+2):(2*T+1)] # h[1] : h[258]
mat_names_DA[(2*T+2)] # h0
mat_names_DA[(2*T+2+1)]  # omega_g
mat_names_DA[(2*T+2+2)]  # omega_h
mat_names_DA[(2*T+2+1):(3*T+4)] # tau[1] : tau[258]
theta1_DA = mat1_DA[,c(T+1,2*T+2,2*T+2+1,2*T+2+2)]
theta2_DA = mat2_DA[,c(T+1,2*T+2,2*T+2+1,2*T+2+2)]
colnames(theta1_DA) = c('g0','h0','omega_g','omega_h')
colnames(theta2_DA) = c('g0','h0','omega_g','omega_h')
tau1_sel_DA = mat1_DA[,seq((2*T+2+1),(3*T+4),by=50)]
tau2_sel_DA = mat2_DA[,seq((2*T+2+1),(3*T+4),by=50)]
mean_tau1_DA = colMeans(mat1_DA[,(2*T+2+1):(3*T+4)])
mean_tau2_DA = colMeans(mat2_DA[,(2*T+2+1):(3*T+4)])
g1_sel_DA = mat1_DA[,seq(1,T,by=50)]
g2_sel_DA = mat2_DA[,seq(1,T,by=50)]
mean_g1_DA = colMeans(mat1_DA[,1:T])
mean_g2_DA = colMeans(mat2_DA[,1:T])
h1_sel_DA = mat1_DA[,seq((T+2),(2*T+1),by=50)]
h2_sel_DA = mat2_DA[,seq((T+2),(2*T+1),by=50)]
mean_h1_DA = colMeans(mat1_DA[,(T+2):(2*T+1)])
mean_h2_DA = colMeans(mat2_DA[,(T+2):(2*T+1)])
if (save_on) {
save(file=paste("UCSV_emp_DA_data",toString(D),".RData",sep=""),
y, ucsv_model_DA, time_init_DA, time_sample_DA, mat_names_DA,
ESS1_DA, ESS2_DA, theta1_DA, theta2_DA,
tau1_sel_DA, tau2_sel_DA, mean_tau1_DA, mean_tau2_DA,
g1_sel_DA, g2_sel_DA, mean_g1_DA, mean_g2_DA,
h1_sel_DA, h2_sel_DA, mean_h1_DA, mean_h2_DA)
}
# quit()
par(mfrow=c(3,1))
plot(exp(mean_tau1_DA/2),type='l',col='blue',xlab="",ylab="")
lines(exp(mean_tau2_DA/2),type='l',col='darkblue')
plot(exp(mean_h1_DA/2),type='l',col='red',xlab="",ylab="")
lines(exp(mean_h2_DA/2),type='l',col='darkred')
plot(exp(mean_g1_DA/2),type='l',col='green',xlab="",ylab="")
lines(exp(mean_g2_DA/2),type='l',col='darkgreen')
colMeans(theta1_DA)
colMeans(theta2_DA)
colMeans(theta1_DA)
colMeans(theta2_DA)^2
par(mfrow=c(3,1))
plot(mean_tau1_DA,type= 'l',xlab='',ylab='',col='blue',main='mean tau')
lines(mean_tau2_DA,type= 'l',xlab='',ylab='',col='darkblue')
plot(mean_h1_DA,type= 'l',xlab='',ylab='',col='red',main='mean h')
lines(mean_h2_DA,type= 'l',xlab='',ylab='',col='darkred')
plot(mean_g2_DA,type= 'l',xlab='',ylab='',col='green',main='mean g')
par(mfrow=c(2,2))
for (i in 1:4){
acf(theta1_DA[,i],xlab='',ylab='',lag=100,main=colnames(theta1_DA)[i])
}
par(mfrow=c(3,M))
for (i in 1:M){
acf(tau2_sel_DA[,i] ,xlab='',ylab='',lag=100, main = paste('tau1 ',toString(seq(1,T,50)[i]),sep=''))
# lines(tau2_sel_DA[,i],type= 'l',xlab='',ylab='')
}
for (i in 1:M){
acf(h2_sel_DA[,i] ,xlab='',ylab='',lag=100, main = paste('h1 ',toString(seq(1,T,50)[i]),sep=''))
# lines(h2_sel_DA[,i],type= 'l',xlab='',ylab='',col='darkred')
}
for (i in 1:M){
acf(g2_sel_DA[,i] ,xlab='',ylab='',lag=100, main = paste('g1 ',toString(seq(1,T,50)[i]),sep=''))
# lines(g2_sel_DA[,i],type= 'l',xlab='',ylab='',col='darkgreen')
}
if (D > 0){
M = 5
} else{
M = 6
}
par(mfrow=c(3,M))
for (i in 1:M){
plot(tau1_sel_DA[,i],type= 'l',xlab='',ylab='',col='blue')
lines(tau2_sel_DA[,i],type= 'l',xlab='',ylab='',col='darkblue')
}
for (i in 1:M){
plot(h1_sel_DA[,i],type= 'l',xlab='',ylab='',col='red')
lines(h2_sel_DA[,i],type= 'l',xlab='',ylab='',col='darkred')
}
for (i in 1:M){
plot(g1_sel_DA[,i],type= 'l',xlab='',ylab='',col='green')
lines(g2_sel_DA[,i],type= 'l',xlab='',ylab='',col='darkgreen')
}
T
