colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)]
colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)])
mat_names_HMM_adapt[T*N_q+ (1)]
colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)])
AAA=colMeans(mat1_HMM_adapt[,T*N_q+ (1:T/2)])
AAA
BBB=mat_names_HMM_adapt[T*N_q+ (1:T/2)]
BBB
load("C:/Users/aga/Dropbox/Research Visit/Ruth King/Codes/SV/SV_HMM_adapt_Nq25_T2000_selected.RData")
time_sample_HMM_adapt
mean(ESS1_HMM_adapt[1:1000])
mean(ESS2_HMM_adapt[1:1000])
ESS1_HMM_adapt[1:3]
ESS2_HMM_adapt[1:3]
plot(seq(2,2000, by=2),mean_H1_HMM_adapt)
plot(seq(2,2000, by=2),mean_H2_HMM_adapt,col="red")
plot(h_true,type="l",col="black")
lines(seq(2,2000, by=2),mean_H1_HMM_adapt,col="blue")
lines(seq(2,2000, by=2),mean_H2_HMM_adapt,col="green")
colMeans(theta1_HMM_adapt)
colMeans(theta2_HMM_adapt)
load("C:/Users/aga/Dropbox/Research Visit/Ruth King/Codes/SV/SV_HMM_Nbin25_T2000_selected.RData")
time_sample_HMM
mean(ESS1_HMM[1:1000])
mean(ESS2_HMM[1:1000])
ESS1_HMM[1:3]
ESS2_HMM[1:3]
time_sample_HMM_adapt
mean(ESS1_HMM_adapt[1:1000])
mean(ESS2_HMM_adapt[1:1000])
ESS1_HMM_adapt[1:3]
ESS2_HMM_adapt[1:3]
time_init_HMM[3]
time_sample_HMM_adapt[3]
mean(ESS1_HMM_adapt[1:1000])
mean(ESS2_HMM_adapt[1:1000])
ESS1_HMM_adapt[1:3]
ESS2_HMM_adapt[1:3]
time_init_HMM[3]
time_sample_HMM[3]
mean(ESS1_HMM[1:1000])
mean(ESS2_HMM[1:1000])
ESS1_HMM[1:3]
ESS2_HMM[1:3]
time_init_HMM[3]
time_sample_HMM_adapt[3]
mean(ESS1_HMM_adapt[1:1000])
mean(ESS2_HMM_adapt[1:1000])
ESS1_HMM_adapt[1:3]
ESS2_HMM_adapt[1:3]
time_init_HMM_adapt[3]
load("C:/Users/aga/Dropbox/Research Visit/Ruth King/Codes/SV/SV_DA_T2000_selected.RData")
T=2000
plot(ESS1_DA[seq(2,T,by=2)],ylim=c(0,1000),type='l',col='red',xlab="",ylab="")
lines(ESS2_DA[seq(2,T,by=2)],type='l',col='darkred')
lines(ESS1_HMM[c(1:T/2)],type='l',col='green')
lines(ESS2_HMM[c(1:T/2)],type='l',col='darkgreen')
lines(ESS1_HMM_adapt[c(1:T/2)],type='l',col='blue')
lines(ESS2_HMM_adapt[c(1:T/2)],type='l',col='darkblue')
View(H_short2_HMM_adapt)
sv_model_HMM
View(theta1_DA)
sv_model_HMM$data()
sv_model_HMM$data$N_bin
View(H_short2_HMM)
sv_model_HMM$data
sv_model_HMM$data()
sv_model_HMM$data()$N_bin
N_bin = sv_model_HMM$data()$N_bin
N_q = sv_model_HMM_adapt$data()$N_q
N_bin = sv_model_HMM$data()$N_bin
N_q = sv_model_HMM_adapt$data()$N_q
N_bin
N_q
plot(ESS1_DA[seq(2,T,by=2)],ylim=c(0,1000),type='l',col='red',xlab="",ylab="",
sub=paste("ESS N_bin=",toString(N_bin),", Nq=",toString(N_q),sep=""))
lines(ESS2_DA[seq(2,T,by=2)],type='l',col='darkred')
lines(ESS1_HMM[c(1:T/2)],type='l',col='green')
lines(ESS2_HMM[c(1:T/2)],type='l',col='darkgreen')
lines(ESS1_HMM_adapt[c(1:T/2)],type='l',col='blue')
lines(ESS2_HMM_adapt[c(1:T/2)],type='l',col='darkblue')
legend(0,1000,legend = c("DA","HMM",HMM_adapt),col=c("red","green","blue"))
plot(ESS1_DA[seq(2,T,by=2)],ylim=c(0,1000),type='l',col='red',xlab="",ylab="",
sub=paste("ESS N_bin=",toString(N_bin),", Nq=",toString(N_q),sep=""))
lines(ESS2_DA[seq(2,T,by=2)],type='l',col='darkred')
lines(ESS1_HMM[c(1:T/2)],type='l',col='green')
lines(ESS2_HMM[c(1:T/2)],type='l',col='darkgreen')
lines(ESS1_HMM_adapt[c(1:T/2)],type='l',col='blue')
lines(ESS2_HMM_adapt[c(1:T/2)],type='l',col='darkblue')
legend(0,1000,legend = c("DA","HMM","HMM_adapt"),col=c("red","green","blue"))
legend
? legend
legend(0,1000,legend = c("DA","HMM","HMM_adapt"),col=c("red","green","blue"))
legend(0,1000,legend = c("DA","HMM","HMM_adapt"),col=c("red"))
legend(0,1000,legend = c("DA","HMM","HMM_adapt"),pch =10,col=c("red","green","blue"))
plot(ESS1_DA[seq(2,T,by=2)],ylim=c(0,1000),type='l',col='red',xlab="",ylab="",
sub=paste("ESS N_bin=",toString(N_bin),", Nq=",toString(N_q),sep=""))
lines(ESS2_DA[seq(2,T,by=2)],type='l',col='darkred')
lines(ESS1_HMM[c(1:T/2)],type='l',col='green')
lines(ESS2_HMM[c(1:T/2)],type='l',col='darkgreen')
lines(ESS1_HMM_adapt[c(1:T/2)],type='l',col='blue')
lines(ESS2_HMM_adapt[c(1:T/2)],type='l',col='darkblue')
legend(0,1000,legend = c("DA","HMM","HMM_adapt"),lty =1,col=c("red","green","blue"))
plot(h_true,ylim=c(0,1000),type='l',col='black',xlab="",ylab="",
sub=paste("posterior mean h N_bin=",toString(N_bin),", Nq=",toString(N_q),sep=""))
lines(mean_H1_DA,type='l',col='red')
lines(mean_H2_DA,type='l',col='darkred')
lines(seq(2,T,by=2),mean_H1_HMM,type='l',col='green')
lines(seq(2,T,by=2),mean_H2_HMM,type='l',col='darkgreen')
lines(seq(2,T,by=2),mean_H1_HMM_adapt,type='l',col='blue')
lines(seq(2,T,by=2),mean_H2_HMM_adapt,type='l',col='darkblue')
legend(0,1000,legend = c("true","DA","HMM","HMM_adapt"),lty =1,col=c("black","red","green","blue"))
plot(h_true,ylim=c(0,1000),type='l',col='black',xlab="",ylab="",
sub=paste("posterior mean h N_bin=",toString(N_bin),", Nq=",toString(N_q),sep=""))
lines(mean_H1_DA,type='l',col='red')
lines(mean_H2_DA,type='l',col='darkred')
lines(seq(2,T,by=2),mean_H1_HMM,type='l',col='green')
lines(seq(2,T,by=2),mean_H2_HMM,type='l',col='darkgreen')
lines(seq(2,T,by=2),mean_H1_HMM_adapt,type='l',col='blue')
lines(seq(2,T,by=2),mean_H2_HMM_adapt,type='l',col='darkblue')
legend(0,1000,legend = c("true","DA","HMM","HMM_adapt"),lty =1,col=c("black","red","green","blue"))
plot(h_true,ylim=c(-10,10),type='l',col='black',xlab="",ylab="",
sub=paste("posterior mean h N_bin=",toString(N_bin),", Nq=",toString(N_q),sep=""))
lines(mean_H1_DA,type='l',col='red')
lines(mean_H2_DA,type='l',col='darkred')
lines(seq(2,T,by=2),mean_H1_HMM,type='l',col='green')
lines(seq(2,T,by=2),mean_H2_HMM,type='l',col='darkgreen')
lines(seq(2,T,by=2),mean_H1_HMM_adapt,type='l',col='blue')
lines(seq(2,T,by=2),mean_H2_HMM_adapt,type='l',col='darkblue')
legend(0,1000,legend = c("true","DA","HMM","HMM_adapt"),lty =1,col=c("black","red","green","blue"))
plot(h_true,type='l',col='black',xlab="",ylab="",
sub=paste("posterior mean h N_bin=",toString(N_bin),", Nq=",toString(N_q),sep=""))
lines(mean_H1_DA,type='l',col='red')
lines(mean_H2_DA,type='l',col='darkred')
lines(seq(2,T,by=2),mean_H1_HMM,type='l',col='green')
lines(seq(2,T,by=2),mean_H2_HMM,type='l',col='darkgreen')
lines(seq(2,T,by=2),mean_H1_HMM_adapt,type='l',col='blue')
lines(seq(2,T,by=2),mean_H2_HMM_adapt,type='l',col='darkblue')
legend(0,1000,legend = c("true","DA","HMM","HMM_adapt"),lty =1,col=c("black","red","green","blue"))
legend(0,-3,legend = c("true","DA","HMM","HMM_adapt"),lty =1,col=c("black","red","green","blue"))
colMeans(theta1_DA)
colMeans(theta2_DA)
colMeans(theta1_HMM)
colMeans(theta2_HMM)
colMeans(theta1_HMM_adapt)
colMeans(theta2_HMM_adapt)
load("C:/Users/aba228/Dropbox/New Projects/Censored Posterior/PCP/include/data/results_rugarch_all_data.RData")
View(coefs_all)
View(coefs_short_all)
View(resid_mom_all)
View(resid_mom_short_all)
load("C:/Users/aba228/Dropbox/Research Visit/Ruth King/Codes/SV/SV_HMM_adapt_Nq30_T2000_selected_mid_BIN100.RData")
time = [1998,(2017 + 8/12)];
time = c(1998,(2017 + 8/12));
(2017 + 8/12)
load("C:/Users/aba228/Dropbox/Research Visit/Ruth King/Codes/SV/SV_emp_DA_T2000_selected.RData")
T=2000
plot(mean_H1_DA,type='l',col='red')
lines(mean_H2_DA,type='l',col='darkred')
colMeans(theta1_DA)
colMeans(theta2_DA)
par(mfrow=c(3,1))
for (i in 1:3){
plot(theta1_DA[,i],type= 'l',xlab='',ylab='',col='blue')
lines(theta1_DA[,i],type= 'l',xlab='',ylab='',col='darkblue')
}
plot(mean_H1_DA,type='l',col='red',xlab="",ylab="")
lines(mean_H2_DA,type='l',col='darkred')
sum(100+750*seq(0,24)^2)
seq(0,24)
ln(44/7)
lon(44/7)
log(44/7)
log(2+5*0.25*2.5)
44*7.5
log(2+5*1)
log(2+5*(6/5)*(3/5))
log(2+5*(3/70)*(3/70))
c(1,2,3)
c(1,2,3)=3
c(1,2,3)-3
c(1,2,3)==3
any(c(1,2,3)==3)
? any
log(2+5*(0.75)*(1.5))
log(2+5*(6/5)*(0.6))
log(2+5*(17/10)*(13/20))
2*log(1.05)
2*log(1.0)
exp(-1/2)
# setwd("SV")
rm(list = ls())
library(rjags)
library(coda)
set.seed(1345221)
save_on = TRUE
ada=1000
iter=10000
th=1
cha= 2 #2
mu <- -1
phi <- 0.98
sigma2 <- 0.01
sigma <- sqrt(sigma2)
# nu <- 5;
#beta <- -0.2;
rho <- -0.2
param <- c(rho, mu, phi, sigma2)
a1 = mu
P1 <- (sigma^2)/(1-phi^2)
T <- 2000
h_true <- rep(NaN,T)
E <- rnorm(T,2)
V <- matrix(c(1, rho*sigma, rho*sigma, sigma2),ncol=2)
V <- matrix(c(1, rho*sigma, rho*sigma, sigma2),ncol=2)
V
chol(V)
CV <- t(chol(V))
CV
E <- t(CV%*%t(E))
E
size(E)
dim(E)
typeof(E)
length(E)
E <- matrix(rnorm(T,2),nrow=T)
typeof(E)
dim(E)
help rnorm
? rnorm
E <- matrix(rnorm(T*2),nrow=T)
dim(E)
CV%*%t(E)
E <- t(CV%*%t(E))
plot(E)
epsilon <- E[,1]
eta <- E[,2]
h_true[1] <- a1
for (t in c(2:T)){
h_true[t] = mu + phi*(h_true[t-1]-mu) + eta[t]
}
plot(h_true, type=';')
plot(h_true, type='l')
y <- exp(h_true/2)*epsilon
lines(y,color='red',type='l')
par(mfrow=c(1,1))
plot(y,type='l')
lines(h_true, type='l', col='red')
svl_model_mayer <- "
model{
theta0 ~ dnorm(mu,itau2);
thetamean[1] <- mu + phi*(theta0-mu);
theta[1] ~ dnorm(thetamean[1],itau2);
for (t in 2:n) {
thetamean[t] <- mu + phi*(theta[t-1]-mu);
theta[t] ~ dnorm(thetamean[t],itau2);
}
for (t in 1:(n-1)) {
Ymean[t] <- rho/tau*exp(0.5*theta[t])*(theta[t+1] - mu - phi*(theta[t]-mu));
Yisigma2[t] <- 1/(exp(theta[t])*(1-rho*rho));
Y[t] ~ dnorm(Ymean[t],Yisigma2[t]);
}
Ymean[n]<- mu-phi*(theta[n]-mu);
Yisigma2[n] <-  1/(exp(theta[n]));
Y[n] ~ dnorm(Ymean[n],Yisigma2[n]);
mu  ~ dnorm(0,0.001);
phistar ~ dunif(0,1);
itau2  ~ dgamma(0.001,0.001);
rho ~ dnorm(0, 1);
}
"
params <- c('mu','phistar','itay2','rho','theta')
data <- list(y=y,T=T)
tstart = proc.time()
svl_model_mayer <- jags.model(textConnection(svl_model_mayer),
data=data, inits=inits, n.chains = cha, n.adapt = ada)
time_init_mayer = proc.time()-tstart
tstart = proc.time()
data <- list(y=y,n=T)
tstart = proc.time()
svl_model_mayer <- jags.model(textConnection(svl_model_mayer),
data=data, inits=inits, n.chains = cha, n.adapt = ada)
time_init_mayer = proc.time()-tstart
svl_model_mayer <- "
model{
theta0 ~ dnorm(mu,itau2);
thetamean[1] <- mu + phi*(theta0-mu);
theta[1] ~ dnorm(thetamean[1],itau2);
for (t in 2:n) {
thetamean[t] <- mu + phi*(theta[t-1]-mu);
theta[t] ~ dnorm(thetamean[t],itau2);
}
for (t in 1:(n-1)) {
Ymean[t] <- rho/tau*exp(0.5*theta[t])*(theta[t+1] - mu - phi*(theta[t]-mu));
Yisigma2[t] <- 1/(exp(theta[t])*(1-rho*rho));
Y[t] ~ dnorm(Ymean[t],Yisigma2[t]);
}
Ymean[n]<- mu-phi*(theta[n]-mu);
Yisigma2[n] <-  1/(exp(theta[n]));
Y[n] ~ dnorm(Ymean[n],Yisigma2[n]);
mu ~ dnorm(0,0.1);
phistar ~ dbeta(20,1.5);
itau2 ~ dgamma(2.5,0.025);
beta <- exp(mu/2);
phi  <- 2*phistar-1;
tau  <- sqrt(1/itau2);
rho ~ dnorm(0, 1);
}
params <- c('mu','phistar','itay2','rho','theta')
data <- list(y=y,n=T)
tstart = proc.time()
svl_model_mayer <- jags.model(textConnection(svl_model_mayer),
data=data, inits=inits, n.chains = cha, n.adapt = ada)
time_init_mayer = proc.time()-tstart
tstart = proc.time()
params <- c('mu','phistar','itay2','rho','theta')
data <- list(y=y,n=T)
tstart = proc.time()
svl_model_mayer <- jags.model(textConnection(svl_model_mayer),
data=data, inits=inits, n.chains = cha, n.adapt = ada)
time_init_mayer = proc.time()-tstart
tstart = proc.time()
params <- c('mu','phistar','itay2','rho','theta')
data <- list(y=y,n=T)
tstart = proc.time()
svl_model_mayer <- jags.model(textConnection(svl_model_mayer),
data=data, n.chains = cha, n.adapt = ada)
time_init_mayer = proc.time()-tstart
tstart = proc.time()
svl_model_mayer
lines(y,color='red',type='l')
tstart = proc.time()
svl_model_mayer <- jags.model(textConnection(svl_model_mayer),
data=data, n.chains = cha, n.adapt = ada)
time_init_mayer = proc.time()-tstart
tstart = proc.time()
params <- c('mu','phi','tau','rho','theta')
data <- list(y=y,n=T)
tstart = proc.time()
svl_model_mayer <- jags.model(textConnection(svl_model_mayer),
data=data, n.chains = cha, n.adapt = ada)
time_init_mayer = proc.time()-tstart
tstart = proc.time()
svl_model_mayer <- "
model{
theta0 ~ dnorm(mu,itau2);
thetamean[1] <- mu + phi*(theta0-mu);
theta[1] ~ dnorm(thetamean[1],itau2);
for (t in 2:n) {
thetamean[t] <- mu + phi*(theta[t-1]-mu);
theta[t] ~ dnorm(thetamean[t],itau2);
}
for (t in 1:(n-1)) {
Ymean[t] <- rho/tau*exp(0.5*theta[t])*(theta[t+1] - mu - phi*(theta[t]-mu));
Yisigma2[t] <- 1/(exp(theta[t])*(1-rho*rho));
Y[t] ~ dnorm(Ymean[t],Yisigma2[t]);
}
Ymean[n]<- mu-phi*(theta[n]-mu);
Yisigma2[n] <-  1/(exp(theta[n]));
Y[n] ~ dnorm(Ymean[n],Yisigma2[n]);
mu ~ dnorm(0,0.1);
phistar ~ dbeta(20,1.5);
itau2 ~ dgamma(2.5,0.025);
beta <- exp(mu/2);
phi  <- 2*phistar-1;
tau  <- sqrt(1/itau2);
rho ~ dnorm(0, 1);
}
"
params <- c('mu','phi','tau','rho','theta')
data <- list(y=y,n=T)
tstart = proc.time()
svl_model_mayer <- jags.model(textConnection(svl_model_mayer),
data=data, n.chains = cha, n.adapt = ada)
time_init_mayer = proc.time()-tstart
tstart = proc.time()
svl_model_mayer
data <- list(Y=y,n=T)
tstart = proc.time()
svl_model_mayer <- jags.model(textConnection(svl_model_mayer),
data=data, n.chains = cha, n.adapt = ada)
time_init_mayer = proc.time()-tstart
tstart = proc.time()
params <- c('mu','phi','tau','rho','theta')
data <- list(Y=y,n=T)
tstart = proc.time()
svl_model_mayer <- jags.model(textConnection(svl_model_mayer),
data=data, n.chains = cha, n.adapt = ada)
time_init_mayer = proc.time()-tstart
tstart = proc.time()
svl_model_mayer <- "
model{
theta0 ~ dnorm(mu,itau2)
thetamean[1] <- mu + phi*(theta0-mu)
theta[1] ~ dnorm(thetamean[1],itau2)
for (t in 2:n) {
thetamean[t] <- mu + phi*(theta[t-1]-mu)
theta[t] ~ dnorm(thetamean[t],itau2)
}
for (t in 1:(n-1)) {
Ymean[t] <- rho/tau*exp(0.5*theta[t])*(theta[t+1] - mu - phi*(theta[t]-mu))
Yisigma2[t] <- 1/(exp(theta[t])*(1-rho*rho)
Y[t] ~ dnorm(Ymean[t],Yisigma2[t])
}
Ymean[n]<- mu-phi*(theta[n]-mu)
Yisigma2[n] <-  1/(exp(theta[n]))
Y[n] ~ dnorm(Ymean[n],Yisigma2[n])
mu ~ dnorm(0,0.1)
phistar ~ dbeta(20,1.5)
itau2 ~ dgamma(2.5,0.025)
beta <- exp(mu/2)
phi  <- 2*phistar-1
tau  <- sqrt(1/itau2)
rho ~ dnorm(0, 1)
}
"
params <- c('mu','phi','tau','rho','theta')
data <- list(Y=y,n=T)
tstart = proc.time()
svl_model_mayer <- jags.model(textConnection(svl_model_mayer),
data=data, n.chains = cha, n.adapt = ada)
time_init_mayer = proc.time()-tstart
tstart = proc.time()
svl_model_mayer <- "
model{
theta0 ~ dnorm(mu,itau2)
thetamean[1] <- mu + phi*(theta0-mu)
theta[1] ~ dnorm(thetamean[1],itau2)
for (t in 2:n) {
thetamean[t] <- mu + phi*(theta[t-1]-mu)
theta[t] ~ dnorm(thetamean[t],itau2)
}
for (t in 1:(n-1)) {
Ymean[t] <- rho/tau*exp(0.5*theta[t])*(theta[t+1] - mu - phi*(theta[t]-mu))
Yisigma2[t] <- 1/(exp(theta[t])*(1-rho*rho)
Y[t] ~ dnorm(Ymean[t],Yisigma2[t])
}
Ymean[n] <- mu-phi*(theta[n]-mu)
Yisigma2[n] <-  1/(exp(theta[n]))
Y[n] ~ dnorm(Ymean[n],Yisigma2[n])
mu ~ dnorm(0,0.1)
phistar ~ dbeta(20,1.5)
itau2 ~ dgamma(2.5,0.025)
beta <- exp(mu/2)
phi  <- 2*phistar-1
tau  <- sqrt(1/itau2)
rho ~ dnorm(0, 1)
}
"
params <- c('mu','phi','tau','rho','theta')
data <- list(Y=y,n=T)
tstart = proc.time()
svl_model_mayer <- jags.model(textConnection(svl_model_mayer),
data=data, n.chains = cha, n.adapt = ada)
time_init_mayer = proc.time()-tstart
tstart = proc.time()
params <- c('mu','phi','tau','rho','theta')
data <- list(Y=y,n=T)
tstart = proc.time()
svl_model_mayer <- jags.model('svl_model_mayer.R',
data=data, n.chains = cha, n.adapt = ada)
time_init_mayer = proc.time()-tstart
tstart = proc.time()
setwd("SV/SVM")
params <- c('mu','phi','tau','rho','theta')
data <- list(Y=y,n=T)
tstart = proc.time()
svl_model_mayer <- jags.model('svl_model_mayer.R',
data=data, n.chains = cha, n.adapt = ada)
time_init_mayer = proc.time()-tstart
tstart = proc.time()
tstart = proc.time()
output_svl_DA <- coda.samples(svl_model_mayer, params, n.iter = iter, thin=th)
time_sample_DA = proc.time()-tstart
mat1_DA = as.matrix(output_svl_DA[1])
mat2_DA = as.matrix(output_svl_DA[2])
mat_names_DA <- colnames(mat1_DA)
mat_names_DA
mat_names_DA[1"10"]
mat_names_DA[1:10]
mat_names_DA[1:4]
mat_names_DA[T+4]
mat_names_DA[c(4+1,T+4)]
theta1_DA = mat1_DA[,1:4]
theta2_DA = mat2_DA[,1:4]
param
param <- c(mu,phi,rho,sigma)
par(mfrow=c(2,2))
for (i in 1:4){
plot(theta1_DA[,i],xlab='',ylab='',type='l',main=colnames(theta1_DA)[i])
lines(theta2_DA[,i],xlab='',ylab='',type='l',col='blue')
lines(param[i]+0*theta2_DA[,i],xlab='',ylab='',type='l',col='red')
}
colMeans(theta1_DA)
colMeans(theta2_DA)
H_short1_DA = mat1_DA[,4+seq(200,T,by=200)]
H_short2_DA = mat2_DA[,4+seq(200,T,by=200)]
par(mfrow=c(3,3))
for (i in 1:9){
plot(H_short1_DA[,i],xlab='',ylab='',type='l',main=colnames(H_short1_DA)[i])
lines(H_short2_DA[,i],xlab='',ylab='',type='l',col='blue')
lines(h_true[200*i]+0*H_short2_DA[,i],xlab='',ylab='',type='l',col='red')
}
par(mfrow=c(2,2))
for (i in 1:4){
acf(theta1_DA[,i],xlab='',ylab='',lag=100,main=colnames(theta1_DA)[i])
}
par(mfrow=c(3,3))
for (i in 1:9){
acf(H_short1_DA[,i],xlab='',ylab='',lag=100,main=colnames(H_short1_DA)[i])
}
param
