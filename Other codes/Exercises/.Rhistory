install.packages("rugarch")
library("rugarch", lib.loc="~/R/win-library/3.1")
setwd("C:/Users/aga/Dropbox/Research Visit/Ruth King/Codes")
setwd("C:/Users/aga/Dropbox/Research Visit/Ruth King/Codes")
library(rjags)
library(coda)
library(lattice)
set.seed(134522)
# MCMC details:
ada=100
iter=1000
th=1
cha=2
#***********************************************************************
# READ DATA
#***********************************************************************
# Number of years (Number of sample occasion in year)  (1978-2003)
ti <- 26
# Capture recapture data for females and males
mfem <- matrix(c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,
0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,
0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,
0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,9,
0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,15,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,14,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,11,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,13,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,15,
1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,
0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,
0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,
0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,
0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,
0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,
0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,1,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,4,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3),nrow=50,ncol=26,byrow=T)
mmal<-matrix(c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,
0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,
0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,
0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,10,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,15,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,16,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,13,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,14,
1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,
0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,
0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),nrow=50,ncol=26,byrow=T)
# No. of released individuals (2 age classes)
# Females:
rfem <- array(0,2*(ti-1))
for(i in 1:(2*(ti-1))){
rfem[i] <- sum(mfem[i,])
}
# Males:
rmal <- array(0,2*(ti-1))
for(i in 1:(2*(ti-1))){
rmal[i] <- sum(mmal[i,])
}
# Population count data
popcount <- c(14,9,8,15,17,15,13,9,8,9,9,10,12,11,10,
11,10,7,5,5,8,12,14,15,18,21)   # number of occupied nest boxes
# Data on reproductive success
nestlings <- c(27,19,25,25,47,46,26,29,23,24,20,21,33,
32,35,35,8,7,17,10,24,31,28,30,33,25)   # number of offspring produced
sample.size <- c(15,9,8,17,18,16,13,9,8,9,9,11,13,11,11,
11,10,7,5,5,8,12,14,15,20,24)            # number of breeding females counted
# Vole abundance
voleH <- c(1,0,0,1,1,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,1,1,0,0,1,0)
# Time
time <- seq(1,25,1)
# standardize the variable
stdT <- array(0,ti)
for (i in 1:ti) {
stdT[i] <- (time[i]-mean(time[]))/sd(time[])
}
# Place all data into list:
data <-list(ti=ti,m=mfem,mM=mmal,r=rfem,rM=rmal,popcount=popcount,nestlings=nestlings[1:(ti-1)],
sample.size=sample.size[1:(ti-1)],time=time,stdT=stdT,voleH=voleH[2:ti])
# Set initial parameter values:
# Simulate values for population sizes from the model:
#N1init <- rep(2,ti)
#Nadimminit <- rep(2,ti)
#NadSurvinit <- rep(10,ti)
#Ntotinit <- N1init+Nadimminit+NadSurvinit
#for (i in 2:ti){
#  N1init[i] <- rpois(1,0.1*Ntotinit[i-1])
#  Nadimminit[i] <- rpois(1,Ntotinit[i-1]*0.1)
#  NadSurvinit[i] <- rbinom(1,Ntotinit[i-1],0.75)
#  Ntotinit[i] <- N1init[i] + Nadimminit[i] + NadSurvinit[i]
#}
#N1init[1] <- NA
#Nadimminit[1] <- NA
#NadSurvinit[1] <- NA
inits <- function(){list(v=rnorm(7),bp=rnorm((ti-1)),fec=runif((ti-1),0,5),
N1=c(NA,round(runif(ti-1,1,50),0)),
NadSurv=c(NA,round(runif(ti-1,5,10),0)),
Nadimm=c(NA,round(runif(ti-1,5,10),0)),
N1prior=5,NadSurvprior=20,Nadimmprior=5)}
#inits <- function(){list(v=rep(0,7),bp=rep(0,ti-1),fec=rep(1,(ti-1)),
#                           N1=N1init,NadSurv=NadSurvinit,
#                           Nadimm=Nadimminit)}
#inits <- function(){list(v=rep(0,7),bp=rep(0,ti-1),fec=rep(1,(ti-1)),
#                        N1=c(NA,rep(2,ti-1)),NadSurv=c(NA,rep(10,ti-1)),
#                        Nadimm=c(NA,rep(2,ti-1)),N1prior=2,NadSurvprior=10,Nadimmprior=2)}
# Set the parameters:
#params <- c('phij','phia','phijM','phiaM','fec','im','lambda',
#                'p','pM','NadSurv','Nadimm','Ntot','MEPHJUF',
#                'MEPHADF','MEFE','MEIM_H','MEIM_L','MEPHJUM',
#                'MEPHADM','v','bp')
params <- c('N1','Ntot','MEPHJUF',
'MEPHADF','MEFE','MEIM_H','MEIM_L','MEPHJUM',
'MEPHADM','v','bp','fec')
# Run the MCMC:
tstart=proc.time()
mod <- jags.model('AbadiJPE.jag.R',data,inits,n.chains=cha,n.adapt=ada)
temp=proc.time()-tstart
tend <- temp
output1 <- coda.samples(mod,params,n.iter=iter,thin=th)
summary(output1)
mat1 = as.matrix(output1[1])
mat1[1]
mat1[2]
mat1[116]
mat1[117]
mat1[117,114]
mat1[11000]
mat1[1100]
mat1[100000]
View(mat1)
View(mat1)
mat1[100]
mat1[1000]
mat1[2000]
mat1[3000]
mat1[2999]
mat1[2999,3]
mat1[999,3]
mat1[999,"MEFE"]
IF = matrix(data=NA,nrow=116,ncol=1)
for (ii in 1:116){
acf_curr = acf(mat1[,ii],lag=iter,plot=FALSE)
acf_curr = acf_curr$acf
IF_curr = 1 + 2*sum(acf_curr)
IF[ii] = IF_curr
}
view(acf_curr)
view(mfem)
View(acf_curr)
sum(acf_curr)
plot(acf_curr)
acf_curr[2:]
acf_curr[2:end]
acf_curr[2]
acf_curr[-1]
sum(acf_curr[-1])
sum(acf_curr)
effectiveSize(mat1[,116])
1000/effectiveSize(mat1[,116])
acf(mat1[,115],lag=iter)
acf(mat1[,5],lag=iter)
acf(mat1[,50],lag=iter)
acf(mat1[,52],lag=iter)
acf(mat1[,102],lag=iter)
acf(mat1[,112],lag=iter)
acf(mat1[,"v1"],lag=iter)
acf(mat1[,114],lag=iter)
acf(mat1[,115],lag=iter)
acf(mat1[,113],lag=iter)
acf(mat1[,112],lag=iter)
acf(mat1[,11],lag=iter)
params
mat1[,"bp"]
mat1["bp"]
header(mat10
)
header(mat10)
head(mat10)
head(mat1)
params
mat1[2:3,"MEFE"]
mat1[2:3,"v[1]"]
mat1$MEFE
output1$MEFE
output1$MEFE[]
output1[,1]$MEFE[]
output1[,2]$MEFE[]
output1[,[2]$MEFE[]
output1[,[2]]$MEFE[]
dim(mat1,1)
nrow(mat1)
ESS <- nrow(mat1)/ apply(mat1, 2, effectiveSize)
par(mfrow=c(2,1))
bar(ESS)
hist(ESS)
barplot(ESS)
barplot(ESS)
hist(ESS)
par(mfrow=c(1,2))
barplot(ESS)
hist(ESS)
savePlot("Owl_ESS","png")
savePlot("Owl_ESS","png",device=dev.cur())
dev.print(png, 'Owl_ESS.png')
name = "Owl_ESS.png"
name
typeof(name)
png(name,width=400,height=350)
dev.off()
dev.off()
par(mfrow=c(1,2))
barplot(ESS)
hist(ESS)
name = "Owl_ESS.png"
png(name)
par(mfrow=c(1,2))
barplot(ESS)
hist(ESS)
par(mfrow=c(1,2))
barplot(ESS)
hist(ESS)
dev.off
png(name)
par(mfrow=c(1,2))
barplot(ESS)
hist(ESS)
plot()
plot(ESS)
getOption("device")
dev.off
dev.off()
dev.off()
dev.off()
dev.off()
par(mfrow=c(1,2))
barplot(ESS)
hist(ESS)
name = "Owl_ESS.png"
png(name, width=400,height=350)
png(name, width=400,height=350)
dev.off()
dev.off()
dev.off()
dev.off()
par(mfrow=c(1,2))
barplot(ESS)
hist(ESS)
png(name)
png(name)
savePlot("name")
windows()
savePlot("name")
par(mfrow=c(1,2))
barplot(ESS)
hist(ESS)
savePlot("name")
par(mfrow=c(2,4))
for (ii in 1:7){
acf(mat1[,v[ii]],lag=iter)
}
par(mfrow=c(2,4))
for (ii in 1:7){
acf(mat1[,"v[ii]"],lag=iter)
}
par(mfrow=c(2,4))
ii=1
acf(mat1[,"v[ii]"],lag=iter)
save
mat1[2:3,"v[1]"]
mat1[,"v[1]"]
acfmat1[,"v[1]"])
acf(mat1[,"v[1]"])
acf(mat1[,"v[1]"],lag=iter)
acf(mat1[,"v[ii]"],lag=iter)
par(mfrow=c(2,4))
par(mfrow=c(1,2))
acf(mat1[,"v[1]"])
acf(mat1[,"v[1]"],lag=iter)
? acf
par(mfrow=c(1,2))
acf(mat1[,"v[1]"], main = "v1")
acf(mat1[,"v[1]"],lag=iter, main = "v1")
par(mfrow=c(1,2))
acf(mat1[,"v[2]"], main = "v2")
acf(mat1[,"v[2]"],lag=iter, main = "v2")
par(mfrow=c(1,2))
acf(mat1[,"v[3]"], main = "v3")
acf(mat1[,"v[3]"],lag=iter, main = "v3")
par(mfrow=c(1,2))
acf(mat1[,"v[4]"], main = "v4")
acf(mat1[,"v[4]"],lag=iter, main = "v4")
par(mfrow=c(1,2))
acf(mat1[,"v[5]"], main = "v5")
acf(mat1[,"v[5]"],lag=iter, main = "v5")
par(mfrow=c(1,2))
acf(mat1[,"v[6]"], main = "v6")
acf(mat1[,"v[6]"],lag=iter, main = "v6")
par(mfrow=c(1,2))
acf(mat1[,"v[7]"], main = "v7")
acf(mat1[,"v[7]"],lag=iter, main = "v7")
par(mfrow=c(1,2))
acf(mat1[,"MEPHJUF"], main = "MEPHJUF")
acf(mat1[,"MEPHJUFv"],lag=iter, main = "MEPHJUF")
acf(mat1[,"MEPHJUF"],lag=iter, main = "MEPHJUF")
par(mfrow=c(1,2))
acf(mat1[,"MEPHADF"], main = "MEPHADF")
acf(mat1[,"MEPHADF"],lag=iter, main = "MEPHADF")
par(mfrow=c(1,2))
acf(mat1[,"MEFE"], main = "MEFE")
acf(mat1[,"MEFE"],lag=iter, main = "MEFE")
par(mfrow=c(1,2))
acf(mat1[,"MEPHADM"], main = "MEPHADM")
acf(mat1[,"MEPHADM"],lag=iter, main = "MEPHADM")
par(mfrow=c(1,2))
acf(mat1[,"MEPHADM"], main = "MEPHADM")
acf(mat1[,"MEPHADM"],lag=iter, main = "MEPHADM")
par(mfrow=c(1,2))
acf(mat1[,"MEPHJUM"], main = "MEPHJUM")
acf(mat1[,"MEPHJUM"],lag=iter, main = "MEPHJUM")
IF <- nrow(mat1)/ apply(mat1, 2, effectiveSize)
ESS <- apply(mat1, 2, effectiveSize)
par(mfrow=c(1,2))
barplot(ESS)
hist(ESS)
par(mfrow=c(1,2))
barplot(IF)
hist(IF)
output2 <- jags.samples(mod,params,n.iter=iter)
View(ESS)
T=36
y=c(0, 0, 1092.23, 100.01,1234.32, 1460.85, 1570.38, 1819.79, 1391.27, 1507.60,
1541.44, 1631.21, 1628.60, 1609.33, 1801.68, 1809.08, 1754.74, 1779.48, 1699.13,
1681.39, 1610.46, 1918.45, 1717.07, 1415.69, 1229.02, 1082.02, 1096.61, 1045.84,
1137.03, 981.1, 647.67, 992.65, 968.62, 926.83, 952.96, 865.64)
f=c(0.1922, 0.3082, 0.3082, -0.9676, 0.5401, 0.3082, 1.1995, 0.1921, -0.8526,
-1.0835, -0.6196, -1.1995, -0.5037, -0.1557, 0.0762, 2.628, -0.3877, -0.968,
1.9318, -0.6196, -0.3877, 1.700, 2.2797, 0.6561, -0.8516, -1.0835, -1.0835,
0.1922, 0.1922, -0.1557, -0.5037, -0.8516, 0.8880, -0.0398, -1.1995, 0)
T1=35
T2=35
m=matrix(c(
13,4,1,2,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1124,
0,16,4,3,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1259,
0,0,11,1,1,1,0,2,1,1,1,1,2,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1082,
0,0,0,10,4,2,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1595,
0,0,0,0,11,1,5,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1596,
0,0,0,0,0,9,5,4,0,2,2,2,1,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2091,
0,0,0,0,0,0,11,9,4,3,1,1,1,3,2,2,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1964,
0,0,0,0,0,0,0,8,4,2,0,0,0,1,2,3,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1942,
0,0,0,0,0,0,0,0,4,1,1,2,2,1,3,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2444,
0,0,0,0,0,0,0,0,0,8,2,2,2,6,1,5,2,1,3,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,3055,
0,0,0,0,0,0,0,0,0,0,16,1,1,1,2,3,2,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3412,
0,0,0,0,0,0,0,0,0,0,0,13,4,4,7,3,1,1,1,1,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,3907,
0,0,0,0,0,0,0,0,0,0,0,0,11,4,0,2,1,1,2,2,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,2538,
0,0,0,0,0,0,0,0,0,0,0,0,0,11,3,5,1,3,3,2,3,0,1,0,1,1,0,0,0,0,0,0,0,0,0,3270,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,5,0,5,4,2,1,2,3,0,0,0,1,0,0,0,0,0,0,0,0,3443,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,5,2,2,0,5,3,0,0,0,1,0,0,0,0,0,0,0,0,0,3132,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,4,6,1,3,3,2,0,1,0,0,1,0,1,0,0,0,0,0,3275,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,8,1,2,4,5,3,0,1,2,0,0,1,0,0,0,0,0,3447,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,2,2,3,3,3,1,0,0,0,0,0,0,0,0,0,0,3902,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,6,2,0,1,1,0,0,1,0,0,0,0,0,0,2860,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,7,6,4,0,0,2,0,0,0,1,2,0,0,1,4077,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,3,2,0,0,0,0,1,0,1,0,0,0,0,4017,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,2,5,2,0,2,2,2,0,0,0,0,0,4827,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,4,3,4,4,2,2,1,0,2,0,1,4732,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,1,2,2,3,0,0,3,0,0,5000,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,4,4,3,0,2,1,0,2,1,4769,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,4,2,4,2,2,3,1,1,3603,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,3,3,2,1,0,2,0,4147,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,4,6,1,0,1,0,4293,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,3,1,2,0,1,3455,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,5,2,2,1,3673,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,4,6,0,3900,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,5,1,3578,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,4481,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,4334),
nrow=35,ncol=36,byrow=T)
BKM_Data.R
source("BKM_Data.R")
source("BKM_StartingVals.R")
source("BKM_StartingVals.R")
mod <- jags.model('BKM_Bugs.R',data,inits,n.chains=cha,n.adapt=ada)
# Load required packages and fix the random seed
library(rjags)
library(coda)
library(lattice)
set.seed(134522)
# MCMC details: ####
ada=100
iter=10000
th=1
cha=2
break
break
break()
faithful
setwd("Other codes/Exercises")
data <- faithful
geyserdata
source("geyserdata.R")
